{"version":3,"sources":["features/treatments.js","features/Question.js","features/ViewType.js","features/InteractionType.js","features/VariableType.js","features/FileIOAdapter.js","features/StatusType.js","features/ChoiceType.js","features/Answer.js","features/questionSlice.js","features/QuestionEngine.js","app/store.js","components/MELForm.js","hooks/useD3.js","components/BarChart.js","components/Calendar.js","components/Survey.js","components/QueryParam.js","App.js","reportWebVitals.js","index.js"],"names":["TREATMENTS_CSV","Question","treatmentId","position","viewType","interaction","variableAmount","amountEarlier","timeEarlier","dateEarlier","amountLater","timeLater","dateLater","maxAmount","maxTime","horizontalPixels","verticalPixels","leftMarginWidthIn","bottomMarginHeightIn","graphWidthIn","graphHeightIn","widthIn","heightIn","comment","this","highup","lowdown","ViewType","Enumify","word","barchart","calendarGraph","calendarWord","calendarIcon","_","closeEnum","InteractionType","none","drag","titration","VariableType","earlierAmount","laterAmount","FileIOAdapter","loadAllTreatments","csvParse","e","fromCSVRow","sort","a","b","fetchQuestions","filter","d","writeAnswers","answersCSV","getState","state","console","log","JSON","stringify","row","treatment_id","enumValueOf","view_type","variable_amount","amount_earlier","time_earlier","undefined","date_earlier","Date","amount_later","time_later","date_later","max_amount","max_time","horizontal_pixels","vertical_pixels","left_margin_width_in","bottom_margin_height_in","graph_width_in","graph_height_in","width_in","height_in","answers","rows","map","choice","shownTimestamp","choiceTimestamp","participantCode","concat","join","StatusType","ChoiceType","unitialized","earlier","later","Answer","qe","treatments","currentQuestionIdx","treatment","currentTreatment","latestAnswer","length","answer","push","createNextAnswer","action","payload","isLastTreatment","status","currentTreatmentAndLatestAnswer","possibleHighup","possibleLowdown","assert","titratingAmount","override","titrationAmount","adjustmentAmount","parseInt","toFormat","incNextQuestion","calcTitrationAmount","updateHighupOrLowdown","newAmount","calcNewAmount","io","createAsyncThunk","questionSlice","createSlice","name","initialState","allTreatments","participantId","fetchAllTreatmentsStatus","error","reducers","setParticipant","setTreatmentId","startSurvey","setQuestionShownTimestamp","setLatestAnswerShown","answerCurrentQuestion","selectAllQuestions","allQuestions","questions","fetchCurrentTreatment","fetchAllTreatments","selectCurrentQuestion","fetchStatus","fetchTreatmentId","actions","store","configureStore","reducer","questionReducer","middleware","getDefaultMiddleware","MELForm","dispatch","useDispatch","q","useSelector","dpi","window","devicePixelRatio","question1stPartText","sooner_time","question2ndPartText","result","width","Math","round","height","overflow","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","setTimeout","DateTime","now","isSubmitting","role","className","type","value","style","color","fontWeight","component","Button","disabled","to","useD3","renderChartFn","dependencies","ref","React","useRef","useEffect","d3","current","BarChart","minScreenRes","min","screen","totalWidthUC","totalHeightUC","barAreaWidthIn","barAreaHeightIn","totalSVGWidthIn","totalSVGHeightIn","scaleHorizUCPerIn","leftOffSetUC","barAreaWidthUC","barAreaHeightUC","barWidth","pixelRatioScale","xTickValues","Array","from","keys","data","time","amount","barType","viewBox","svg","chart","selectAll","attr","x","scaleLinear","domain","range","yRange","y","call","axisBottom","tickValues","tickFormat","format","yTickValues","axisLeft","on","target","__data__","subject","select","dragHandler","Unitialized","calendarMatrix","require","Calendar","monthDays","monthName","getMonth","tableSquareSizeIn","tableSquareSizePx","id","borderCollapse","tableLayout","table","html","earlierDay","getDate","laterDay","each","divText","append","text","barHeight","node","offsetHeight","Survey","question","top","left","marginRight","transform","QueryParam","search","useLocation","URLSearchParams","get","App","exact","path","Home","Instructions","ThankYou","href","divCenterContentStyle","buttonCenterContentStyle","handle","useFullScreenHandle","size","onClick","enter","uuid","uuidv4","csv","convertToCSV","readOnly","navigator","clipboard","writeText","exit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","enableAllPlugins","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ccde4a1.chunk.js","sourcesContent":["export const TREATMENTS_CSV = `treatment_id,position,view_type,interaction,variable_amount,amount_earlier,time_earlier,date_earlier,amount_later,time_later,date_later,max_amount,max_time,horizontal_pixels,vertical_pixels,left_margin_width_in,bottom_margin_height_in,graph_width_in,graph_height_in,width_in,height_in,comment\n1,1,word,none,none,500,2,,1000,5,,,10,,,,,,,4,4,Worded MEL question with no interaction and Read 2001 example values.\n1,2,word,none,none,50,2,,300,7,,,10,,,,,,,8,8,Worded MEL question with no interaction and Read 2001 example values.\n1,3,word,none,none,250,2,,1000,3,,,10,,,,,,,8,8,Worded MEL question with no interaction and Read 2001 example values.\n2,1,barchart,none,none,300,2,,700,5,,1100,10,100,100,0.5,0.5,8,8,8.5,8.5,Barchart MEL question with no interaction.\n2,2,barchart,none,none,500,2,,800,7,,1100,15,100,100,0.5,0.5,8,8,8.5,8.5,Barchart MEL question with no interaction.\n2,3,barchart,none,none,300,2,,1000,7,,1100,15,100,100,0.5,0.5,4,4,4.5,4.5,Barchart MEL question with no interaction.\n3,1,calendarBar,none,none,300,,2/1/22,700,,2/22/22,1100,,100,100,,,,,8,8,Calendar MEL question with barchart and no interaction.\n3,2,calendarBar,none,none,500,,3/1/22,800,,3/12/22,1100,,100,100,,,,,8,8,Calendar MEL question with barchart and no interaction.\n3,3,calendarBar,none,none,300,,4/1/22,1000,,4/15/22,1100,,100,100,,,,,8,8,Calendar MEL question with barchart and no interaction.\n4,1,barchart,drag,laterAmount,500,2,,1000,10,,1500,10,100,100,0.5,0.5,8,8,8.5,8.5,Barchart MEL question with drag interaction.\n5,1,calendar,drag,laterAmount,500,,2/1/22,1000,,2/22/22,1100,,100,100,,,,,8,8,\"Read 2001 example, absolute size\"\n6,1,word,titration,laterAmount,500,2,,1000,3,,,10,,,,,,,8,8,Word MEL question with titration interaction.\n7,1,barchart,titration,laterAmount,500,2,,1000,10,,1500,10,100,100,0.5,0.5,8,8,8.5,8.5,Barchat MEL question with titration interaction.\n8,1,calendarBar,titration,laterAmount,500,,2/1/22,1000,,2/22/22,1100,,100,100,,,,,8,8,Calendar MEL question with barchart and titration interaction.\n9,1,calendarWord,titration,laterAmount,500,,2/1/22,1000,,2/22/22,1100,,100,100,,,,,8,8,Calendar MEL question with word and titration interaction.\n10,1,calendarDrag,titration,laterAmount,500,,2/1/22,1000,,2/22/22,1100,,100,100,,,,,8,8,Calendar MEL question with barchart and drag interaction.\n`;\n","export class Question {\n  constructor({\n    treatmentId,\n    position,\n    viewType,\n    interaction,\n    variableAmount,\n    amountEarlier,\n    timeEarlier,\n    dateEarlier,\n    amountLater,\n    timeLater,\n    dateLater,\n    maxAmount,\n    maxTime,\n    horizontalPixels,\n    verticalPixels,\n    leftMarginWidthIn,\n    bottomMarginHeightIn,\n    graphWidthIn,\n    graphHeightIn,\n    widthIn,\n    heightIn,\n    comment,\n  }) {\n    this.treatmentId = treatmentId;\n    this.position = position;\n    this.viewType = viewType;\n    this.interaction = interaction;\n    this.variableAmount = variableAmount;\n    this.amountEarlier = amountEarlier;\n    this.timeEarlier = timeEarlier;\n    this.dateEarlier = dateEarlier;\n    this.amountLater = amountLater;\n    this.timeLater = timeLater;\n    this.dateLater = dateLater;\n    this.maxAmount = maxAmount;\n    this.maxTime = maxTime;\n    this.horizontalPixels = horizontalPixels;\n    this.verticalPixels = verticalPixels;\n    this.leftMarginWidthIn = leftMarginWidthIn;\n    this.bottomMarginHeightIn = bottomMarginHeightIn;\n    this.graphWidthIn = graphWidthIn;\n    this.graphHeightIn = graphHeightIn;\n    this.widthIn = widthIn;\n    this.heightIn = heightIn;\n    this.comment = comment;\n    this.highup = null;\n    this.lowdown = null;\n  }\n}\n","import { Enumify } from \"enumify\";\n\nexport class ViewType extends Enumify {\n  static word = new ViewType();\n  static barchart = new ViewType();\n  static calendarGraph = new ViewType();\n  static calendarWord = new ViewType();\n  static calendarIcon = new ViewType();\n  static _ = this.closeEnum();\n}\n","import { Enumify } from \"enumify\";\n\nexport class InteractionType extends Enumify {\n  static none = new InteractionType();\n  static drag = new InteractionType();\n  static titration = new InteractionType();\n  static _ = this.closeEnum();\n}\n","import { Enumify } from \"enumify\";\n\nexport class VariableType extends Enumify {\n  static none = new VariableType();\n  static earlierAmount = new VariableType();\n  static laterAmount = new VariableType();\n  static _ = this.closeEnum();\n}\n","import { csvParse } from \"d3\";\n// import { Octokit } from \"octokit\";\n// import { DateTime } from \"luxon\";\nimport { TREATMENTS_CSV } from \"./treatments\";\nimport { Question } from \"./Question\";\nimport { ViewType } from \"./ViewType\";\nimport { InteractionType } from \"./InteractionType\";\nimport { VariableType } from \"./VariableType\";\n\nexport class FileIOAdapter {\n  constructor() {}\n\n  loadAllTreatments = () => {\n    const treatments = csvParse(TREATMENTS_CSV, (e) => {\n      return this.fromCSVRow(e);\n    }).sort((a, b) =>\n      a.position < b.position ? -1 : a.position === b.position ? 0 : 1\n    );\n    return treatments;\n  };\n\n  fetchQuestions = (treatmentId) => {\n    treatmentId = +treatmentId;\n    const questions = csvParse(TREATMENTS_CSV, (e) => {\n      return this.fromCSVRow(e);\n    })\n      .filter((d) => d.treatmentId === treatmentId)\n      .sort((a, b) =>\n        a.position < b.position ? -1 : a.position === b.position ? 0 : 1\n      );\n    return questions;\n  };\n\n  fromCSVRow(row) {\n    return new Question({\n      treatmentId: +row.treatment_id,\n      position: +row.position,\n      viewType: ViewType.enumValueOf(row.view_type),\n      interaction: InteractionType.enumValueOf(row.interaction),\n      variableAmount: VariableType.enumValueOf(row.variable_amount),\n      amountEarlier: +row.amount_earlier,\n      timeEarlier: row.time_earlier ? +row.time_earlier : undefined,\n      dateEarlier: row.date_earlier ? new Date(row.date_earlier) : undefined,\n      amountLater: +row.amount_later,\n      timeLater: row.time_later ? +row.time_later : undefined,\n      dateLater: row.date_later ? new Date(row.date_later) : undefined,\n      maxAmount: +row.max_amount,\n      maxTime: +row.max_time,\n      horizontalPixels: +row.horizontal_pixels,\n      verticalPixels: +row.vertical_pixels,\n      leftMarginWidthIn: +row.left_margin_width_in,\n      bottomMarginHeightIn: +row.bottom_margin_height_in,\n      graphWidthIn: +row.graph_width_in,\n      graphHeightIn: +row.graph_height_in,\n      widthIn: +row.width_in,\n      heightIn: +row.height_in,\n      comment: row.comment,\n    });\n  }\n\n  convertToCSV(answers) {\n    const header = [\n      \"treatment_id,position,view_type,interaction,variable_amount,amount_earlier,time_earlier,date_earlier,amount_later,time_later,date_later,max_amount,max_time,vertical_pixels,horizontal_pixels,left_margin_width_in,bottom_margin_height_in,graph_width_in,graph_height_in,width_in,height_in,choice,shown_timestamp,choice_timestamp,highup,lowdown,participant_code\",\n    ];\n    const rows = answers.map(\n      (a) =>\n        `${a.treatmentId},${a.position},${a.viewType},${a.interaction},${a.variableAmount},${a.amountEarlier},${a.timeEarlier},${a.dateEarlier},${a.amountLater},${a.timeLater},${a.dateLater},${a.maxAmount},${a.maxTime},${a.verticalPixels},${a.horizontalPixels},${a.leftMarginWidthIn},${a.bottomMarginHeightIn},${a.graphWidthIn},${a.graphHeightIn},${a.widthIn},${a.heightIn},${a.choice},${a.shownTimestamp},${a.choiceTimestamp},${a.highup},${a.lowdown},${a.participantCode}`\n    );\n    return header.concat(rows).join(\"\\n\");\n  }\n\n  writeAnswers = async (answersCSV, { getState }) => {\n    const state = getState();\n    console.log(answersCSV);\n    console.log(JSON.stringify(state));\n    // const octokit = new Octokit({\n    //   userAgent: \"thesis_answers/v1.0\",\n    //   // eslint-disable-next-line no-undef\n    //   auth: atob(process.env.REACT_APP_AUTH_TOKEN),\n    // });\n    // // eslint-disable-next-line no-undef\n    // const gistAnswerId = process.env.REACT_APP_GIST_ANSWER_ID;\n    // const url = `PATCH /gists/${gistAnswerId}`;\n    // const now = DateTime.now().toFormat(\"yyyy-MM-dd-H-mm-ss-SSS-ZZZZ\");\n    // const files = {};\n    // answersCSV = `${answersCSV}`;\n    // files[`answers-subject-${state.questions.participant_id}-${now}.csv`] = {\n    //   content: answersCSV,\n    // };\n    // const description = `Answer results for participant ${state.questions.participant_id} at ${now}`;\n    // console.log(\"submitting answers for \" + description);\n    // const payloadObj = {\n    //   gist_id: gistAnswerId,\n    //   description: description,\n    //   files: files,\n    // };\n    // const response = await octokit.request(url, payloadObj);\n\n    // const status = response.status;\n    // console.log(\"answers submitted with status of \" + status);\n  };\n}\n","export const StatusType = {\n  Unitialized: \"Unitialized\",\n  Fetching: \"Fetching\",\n  Fetched: \"Fetched\",\n  Complete: \"Complete\",\n  Error: \"Error\",\n};\n","export const ChoiceType = {\n  unitialized: \"unitialized\",\n  earlier: \"earlier\",\n  later: \"later\",\n};\n","export class Answer {\n  constructor({\n    treatmentId: treatmentId,\n    position: position,\n    viewType: viewType,\n    interaction: interaction,\n    variableAmount: variableAmount,\n    amountEarlier: amountEarlier,\n    timeEarlier: timeEarlier,\n    dateEarlier: dateEarlier,\n    amountLater: amountLater,\n    timeLater: timeLater,\n    dateLater: dateLater,\n    maxAmount: maxAmount,\n    maxTime: maxTime,\n    verticalPixels: verticalPixels,\n    horizontalPixels: horizontalPixels,\n    leftMarginWidthIn: leftMarginWidthIn,\n    bottomMarginHeightIn: bottomMarginHeightIn,\n    graphWidthIn: graphWidthIn,\n    graphHeightIn: graphHeightIn,\n    widthIn: widthIn,\n    heightIn: heightIn,\n    choice: choice,\n    shownTimestamp: shownTimestamp,\n    choiceTimestamp: choiceTimestamp,\n    highup: highup,\n    lowdown: lowdown,\n    participantCode: participantCode,\n  }) {\n    this.treatmentId = treatmentId;\n    this.position = position;\n    this.viewType = viewType;\n    this.interaction = interaction;\n    this.variableAmount = variableAmount;\n    this.amountEarlier = amountEarlier;\n    this.timeEarlier = timeEarlier;\n    this.dateEarlier = dateEarlier;\n    this.amountLater = amountLater;\n    this.timeLater = timeLater;\n    this.dateLater = dateLater;\n    this.maxAmount = maxAmount;\n    this.maxTime = maxTime;\n    this.verticalPixels = verticalPixels;\n    this.horizontalPixels = horizontalPixels;\n    this.leftMarginWidthIn = leftMarginWidthIn;\n    this.bottomMarginHeightIn = bottomMarginHeightIn;\n    this.graphWidthIn = graphWidthIn;\n    this.graphHeightIn = graphHeightIn;\n    this.widthIn = widthIn;\n    this.heightIn = heightIn;\n    this.choice = choice;\n    this.shownTimestamp = shownTimestamp;\n    this.choiceTimestamp = choiceTimestamp;\n    this.highup = highup;\n    this.lowdown = lowdown;\n    this.participantCode = participantCode;\n  }\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { FileIOAdapter } from \"./FileIOAdapter\";\nimport { QuestionEngine } from \"./QuestionEngine\";\nimport { StatusType } from \"./StatusType\";\n\n// Define the initial state of the store for this slicer.\nconst qe = new QuestionEngine();\nconst io = new FileIOAdapter();\n\nexport const writeAnswers = createAsyncThunk(\n  \"survey/writeAnswers\",\n  io.writeAnswers\n);\n\nexport const questionSlice = createSlice({\n  name: \"questions\", // I believe the global state is partitioned by the name value thus the terminology \"slice\"\n  initialState: {\n    allTreatments: null,\n    treatmentId: null,\n    participantId: null,\n    treatments: [],\n    answers: [],\n    currentQuestionIdx: 0,\n    highup: undefined,\n    lowdown: undefined,\n    status: StatusType.Unitialized,\n    fetchAllTreatmentsStatus: StatusType.Unitialized,\n    error: null,\n  }, // the initial state of our global data (under name slice)\n  reducers: {\n    setParticipant(state, action) {\n      state.participantId = action.payload;\n      return state;\n    },\n    setTreatmentId(state, action) {\n      state.treatmentId = action.payload;\n      return state;\n    },\n    fetchQuestions(state) {\n      state.treatments = io.fetchQuestions(state.treatmentId);\n      state.status = StatusType.Fetched;\n      return state;\n    },\n    loadAllTreatments(state) {\n      state.allTreatments = io.loadAllTreatments();\n      state.fetchAllTreatmentsStatus = StatusType.Fetched;\n    },\n    startSurvey(state) {\n      qe.startSurvey(state);\n      return state;\n    },\n    setQuestionShownTimestamp(state, action) {\n      qe.setLatestAnswerShown(state, action);\n      return state;\n    },\n    // we define our actions on the slice of global store data here.\n    answer(state, action) {\n      qe.answerCurrentQuestion(state, action);\n    },\n  },\n});\n\nexport const selectAllQuestions = (state) => {\n  return qe.allQuestions(state.questions);\n};\n\nexport const fetchCurrentTreatment = (state) => {\n  const result = qe.currentTreatment(state.questions);\n  return result;\n};\n\nexport const fetchAllTreatments = (state) => {\n  return state.questions.allTreatments;\n};\n\nexport const selectCurrentQuestion = (state) => {\n  return qe.latestAnswer(state.questions);\n};\n\nexport const fetchStatus = (state) => {\n  return state.questions.status;\n};\n\nexport const fetchAllTreatmentsStatus = (state) => {\n  return state.questions.fetchAllTreatmentsStatus;\n};\n\nexport const fetchTreatmentId = (state) => {\n  return state.questions.treatmentId;\n};\n\n// Action creators are generated for each case reducer function\nexport const {\n  fetchQuestions,\n  loadAllTreatments,\n  startSurvey,\n  setQuestionShownTimestamp,\n  answer,\n  setParticipant,\n  setTreatmentId,\n} = questionSlice.actions;\n\nexport default questionSlice.reducer;\n","import { StatusType } from \"./StatusType\";\nimport { VariableType } from \"./VariableType\";\nimport { InteractionType } from \"./InteractionType\";\nimport { ChoiceType } from \"./ChoiceType\";\nimport { Answer } from \"./Answer\";\n\nexport const TIMESTAMP_FORMAT = \"MM/dd/yyyy H:mm:ss:SSS ZZZZ\";\n\n// TODO Need to capture errors in processing by settings state.status = StatusType.Error\nexport class QuestionEngine {\n  constructor() {}\n\n  currentTreatment(state) {\n    return state.treatments[state.currentQuestionIdx];\n  }\n\n  currentTreatmentAndLatestAnswer(state) {\n    const treatment = this.currentTreatment(state);\n    const latestAnswer = this.latestAnswer(state);\n\n    return { treatment, latestAnswer };\n  }\n\n  latestAnswer(state) {\n    return state.answers.length === 0\n      ? null\n      : state.answers[state.answers.length - 1];\n  }\n\n  createNextAnswer(\n    treatment,\n    answers,\n    amountEarlier,\n    amountLater,\n    highup,\n    lowdown\n  ) {\n    const answer = new Answer({\n      treatmentId: treatment.treatmentId,\n      position: treatment.position,\n      viewType: treatment.viewType,\n      interaction: treatment.interaction,\n      variableAmount: treatment.variableAmount,\n      amountEarlier: amountEarlier,\n      timeEarlier: treatment.timeEarlier,\n      dateEarlier: treatment.dateEarlier,\n      amountLater: amountLater,\n      timeLater: treatment.timeLater,\n      dateLater: treatment.dateLater,\n      maxAmount: treatment.maxAmount,\n      maxTime: treatment.maxTime,\n      verticalPixels: treatment.verticalPixels,\n      horizontalPixels: treatment.horizontalPixels,\n      leftMarginWidthIn: treatment.leftMarginWidthIn,\n      bottomMarginHeightIn: treatment.bottomMarginHeightIn,\n      graphWidthIn: treatment.graphWidthIn,\n      graphHeightIn: treatment.graphHeightIn,\n      widthIn: treatment.widthIn,\n      heightIn: treatment.heightIn,\n      choice: ChoiceType.unitialized,\n      highup: highup,\n      lowdown: lowdown,\n    });\n    answers.push(answer);\n  }\n\n  allQuestions(state) {\n    return state.answers;\n  }\n\n  startSurvey(state) {\n    state.currentQuestionIdx = 0;\n    const treatment = this.currentTreatment(state);\n    state.highup =\n      treatment.variableAmount === VariableType.laterAmount\n        ? treatment.amountEarlier\n        : treatment.amountLater;\n    state.lowdown = undefined;\n    this.createNextAnswer(\n      treatment,\n      state.answers,\n      treatment.amountEarlier,\n      treatment.amountLater,\n      state.highup,\n      state.lowdown\n    );\n  }\n\n  setLatestAnswerShown(state, action) {\n    this.latestAnswer(state).shownTimestamp = action.payload;\n  }\n\n  isLastTreatment(state) {\n    return state.currentQuestionIdx === state.treatments.length - 1;\n  }\n\n  incNextQuestion(state) {\n    if (this.isLastTreatment(state)) {\n      state.status = StatusType.Complete;\n    } else {\n      state.currentQuestionIdx += 1;\n      const treatment = this.currentTreatment(state);\n      this.createNextAnswer(\n        treatment,\n        state.answers,\n        treatment.amountEarlier,\n        treatment.amountLater\n      );\n    }\n  }\n\n  updateHighupOrLowdown(state) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    switch (latestAnswer.choice) {\n      case ChoiceType.earlier:\n        var possibleHighup =\n          treatment.variableAmount === VariableType.laterAmount\n            ? latestAnswer.amountLater\n            : latestAnswer.amountEarlier;\n        if (!state.highup || possibleHighup > state.highup)\n          state.highup = possibleHighup;\n        break;\n      case ChoiceType.later:\n        var possibleLowdown =\n          treatment.variableAmount === VariableType.laterAmount\n            ? latestAnswer.amountLater\n            : latestAnswer.amountEarlier;\n        if (!state.lowdown || possibleLowdown < state.lowdown)\n          state.lowdown = possibleLowdown;\n        break;\n      default:\n        console.assert(\n          true,\n          \"Invalid value for current answer in setAnswerCurrentQuestion\"\n        );\n        break;\n    }\n  }\n\n  calcTitrationAmount(titratingAmount, highup, override) {\n    return (override ? override : titratingAmount - highup) / 2;\n  }\n\n  calcNewAmount(state, titrationAmount) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    var adjustmentAmount;\n    switch (treatment.variableAmount) {\n      case VariableType.laterAmount:\n        console.assert(\n          latestAnswer.choice && latestAnswer.choice !== ChoiceType.unitialized\n        );\n        adjustmentAmount =\n          latestAnswer.choice === ChoiceType.earlier\n            ? titrationAmount\n            : -1 * titrationAmount;\n        return (\n          parseInt((latestAnswer.amountLater + adjustmentAmount) / 10) * 10\n        );\n      case VariableType.earlierAmount:\n        adjustmentAmount =\n          latestAnswer.choice === ChoiceType.earlier\n            ? -1 * titrationAmount\n            : titrationAmount;\n        return (\n          parseInt((latestAnswer.amountEarlier + adjustmentAmount) / 10) * 10\n        );\n      default:\n        console.assert(\n          true,\n          \"Invalid value for question titration type in calcEarlierAndLaterAmounts\"\n        );\n        break;\n    }\n  }\n\n  answerCurrentQuestion(state, action) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    latestAnswer.choice = action.payload.choice;\n    latestAnswer.choiceTimestamp =\n      action.payload.choiceTimestamp.toFormat(TIMESTAMP_FORMAT);\n    if (\n      treatment.interaction === InteractionType.none ||\n      treatment.interaction === InteractionType.drag\n    ) {\n      this.incNextQuestion(state);\n    } else if (treatment.interaction === InteractionType.titration) {\n      const titrationAmount = this.calcTitrationAmount(\n        treatment.variableAmount === VariableType.laterAmount\n          ? latestAnswer.amountLater\n          : latestAnswer.amountEarlier,\n        state.highup,\n        latestAnswer.length === 1 ? state.highup : null\n      );\n      this.updateHighupOrLowdown(state);\n      // TODO we need a termination condition for runaway titration\n      if (state.lowdown - state.highup <= 10) {\n        this.incNextQuestion(state);\n      } else {\n        const newAmount = this.calcNewAmount(state, titrationAmount);\n        if (treatment.variableAmount === VariableType.laterAmount) {\n          this.createNextAnswer(\n            treatment,\n            state.answers,\n            treatment.amountEarlier,\n            newAmount\n          );\n        } else if (treatment.variableAmount === VariableType.earlierAmount) {\n          this.createNextAnswer(\n            treatment,\n            state.answers,\n            newAmount,\n            treatment.amountLater\n          );\n        } else {\n          console.assert(\n            true,\n            \"Titration not set to amountEarlier or amountLater before calling answerCurrentQuestion\"\n          );\n        }\n      }\n    }\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport questionReducer from \"../features/questionSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    questions: questionReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n});\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { DateTime } from \"luxon\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button } from \"react-bootstrap\";\nimport { ChoiceType } from \"../features/ChoiceType\";\nimport { StatusType } from \"../features/StatusType\";\nimport {\n  selectCurrentQuestion,\n  fetchStatus,\n  setQuestionShownTimestamp,\n  answer,\n} from \"../features/questionSlice\";\n\nexport function MELForm() {\n  const dispatch = useDispatch();\n  const q = useSelector(selectCurrentQuestion);\n  const status = useSelector(fetchStatus);\n\n  const dpi = window.devicePixelRatio >= 2 ? 132 : 96;\n\n  const todayText = (sooner_time) =>\n    sooner_time === 0 ? \"today\" : `in ${sooner_time} weeks`;\n\n  function questionText() {\n    return `Make a choice to received ${question1stPartText()} or ${question2ndPartText()}`;\n  }\n\n  function question1stPartText() {\n    return `$${q.amountEarlier} ${todayText(q.timeEarlier)}`;\n  }\n\n  function question2ndPartText() {\n    return `$${q.amountLater} in ${q.timeLater} weeks`;\n  }\n\n  const result = (\n    <div\n      width={`${Math.round(q.widthIn * dpi)}px`}\n      height={`${Math.round(q.heightIn * dpi)}px`}\n      overflow=\"hidden\"\n    >\n      <Formik\n        initialValues={{ choice: ChoiceType.unitialized }}\n        validate={(values) => {\n          let errors = {};\n          if (!values.choice || values.choice === ChoiceType.unitialized) {\n            errors.choice = \"Please choose a selection to continue.\";\n          }\n          return errors;\n        }}\n        onSubmit={(values, { setSubmitting, resetForm }) => {\n          setTimeout(() => {\n            dispatch(\n              answer({\n                choice: values.choice,\n                choiceTimestamp: DateTime.now(),\n              })\n            );\n            setSubmitting(false);\n            resetForm();\n          }, 400);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <div\n              role=\"group\"\n              aria-labelledby=\"my-radio-group\"\n              className=\"radio-choice-label\"\n            >\n              <p>{questionText()} </p>\n              <label>\n                <Field type=\"radio\" name=\"choice\" value={ChoiceType.earlier} />\n                &nbsp;{question1stPartText()}\n              </label>\n              <br></br>\n              <label>\n                <Field type=\"radio\" name=\"choice\" value={ChoiceType.later} />\n                &nbsp;{question2ndPartText()}\n              </label>\n              <span style={{ color: \"red\", fontWeight: \"bold\" }}>\n                <ErrorMessage name=\"choice\" component=\"div\" />\n              </span>\n            </div>\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n\n  if (status === StatusType.Complete) {\n    return <Redirect to=\"/vizsurvey/thankyou\" />;\n  } else {\n    dispatch(setQuestionShownTimestamp(Date.now()));\n    return result;\n  }\n}\n\nexport default MELForm;\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n\n  return ref;\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  range,\n  format,\n  drag,\n  select,\n} from \"d3\";\nimport { Formik, Form } from \"formik\";\nimport { Button } from \"react-bootstrap\";\nimport { DateTime } from \"luxon\";\nimport { useD3 } from \"../hooks/useD3\";\nimport { ChoiceType } from \"../features/ChoiceType\";\nimport { StatusType } from \"../features/StatusType\";\nimport { InteractionType } from \"../features/InteractionType\";\nimport { VariableType } from \"../features/VariableType\";\nimport {\n  selectCurrentQuestion,\n  fetchStatus,\n  setQuestionShownTimestamp,\n  answer,\n} from \"../features/questionSlice\";\n\nfunction BarChart() {\n  const dispatch = useDispatch();\n  const q = useSelector(selectCurrentQuestion);\n  const status = useSelector(fetchStatus);\n\n  const minScreenRes = Math.min(window.screen.height, window.screen.width);\n\n  const totalWidthUC = minScreenRes; //q.horizontalPixels; // may want to get rid of this configuation and just make it 100\n  const totalHeightUC = minScreenRes; //q.verticalPixels; // may want to get rid of this configuation and just make it 100\n  const leftMarginWidthIn = q.leftMarginWidthIn;\n  const bottomMarginHeightIn = q.bottomMarginHeightIn;\n  const barAreaWidthIn = q.graphWidthIn;\n  const barAreaHeightIn = q.graphHeightIn;\n\n  const totalSVGWidthIn = leftMarginWidthIn + barAreaWidthIn;\n  const totalSVGHeightIn = bottomMarginHeightIn + barAreaHeightIn;\n\n  const scaleHorizUCPerIn = totalWidthUC / totalSVGWidthIn;\n  const scaleVertUCPerIn = totalHeightUC / totalSVGHeightIn;\n\n  const leftOffSetUC = scaleHorizUCPerIn * leftMarginWidthIn;\n  const bottomOffSetUC = scaleVertUCPerIn * bottomMarginHeightIn;\n  const barAreaWidthUC = totalWidthUC - leftOffSetUC;\n  const barAreaHeightUC = totalHeightUC - bottomOffSetUC;\n\n  const barWidth = 0.1 * scaleHorizUCPerIn; // bars are 0.1 inch wide\n\n  // SVG thinks the resolution is 96 ppi when macbook is 132 ppi so we need to adjust by device pixel ratio\n  const pixelRatioScale = window.devicePixelRatio >= 2 ? 132 / 96 : 1;\n\n  console.log(`${totalWidthUC},${totalHeightUC},${pixelRatioScale}`);\n  console.log(\n    `${leftMarginWidthIn},${bottomMarginHeightIn},${barAreaWidthIn},${barAreaHeightIn}`\n  );\n  console.log(`${totalSVGWidthIn},${totalSVGHeightIn}`);\n\n  const xTickValues = Array.from(Array(q.maxTime + 1).keys());\n  const data = xTickValues.map((d) => {\n    if (d === q.timeEarlier) {\n      return {\n        time: d,\n        amount: q.amountEarlier,\n        barType: VariableType.earlierAmount,\n      };\n    } else if (d === q.timeLater) {\n      return {\n        time: d,\n        amount: q.amountLater,\n        barType: VariableType.laterAmount,\n      };\n    } else {\n      return { time: d, amount: 0, barType: VariableType.none };\n    }\n  });\n\n  const result = (\n    <div>\n      <svg\n        width={`${totalSVGWidthIn * pixelRatioScale}in`}\n        height={`${totalSVGHeightIn * pixelRatioScale}in`}\n        viewBox={`0 0 ${totalWidthUC} ${totalHeightUC}`}\n        ref={useD3(\n          (svg) => {\n            var chart = svg\n              .selectAll(\".plot-area\")\n              .data([null])\n              .join(\"g\")\n              .attr(\"class\", \"plot-area\");\n\n            const x = scaleLinear()\n              .domain([0, q.maxTime])\n              .range([0, barAreaWidthUC]);\n\n            const yRange = [0, q.maxAmount];\n            const y = scaleLinear().domain(yRange).range([barAreaHeightUC, 0]);\n\n            chart\n              .selectAll(\".x-axis\")\n              .data([null])\n              .join(\"g\")\n              .attr(\n                \"transform\",\n                `translate(${leftOffSetUC},${barAreaHeightUC})`\n              )\n              .attr(\"class\", \"x-axis\")\n              .call(\n                axisBottom(x).tickValues(xTickValues).tickFormat(format(\",.0f\"))\n              );\n\n            const yTickValues = range(yRange[0], yRange[1], yRange[1] / 5);\n            yTickValues.push(yRange[1]);\n\n            chart\n              .selectAll(\".y-axis\")\n              .data([null])\n              .join(\"g\")\n              .attr(\"class\", \"y-axis\")\n              .attr(\"transform\", `translate(${leftOffSetUC},0)`)\n              .call(\n                //axisLeft(y).tickValues(yTickValues).tickFormat(d3.format(\"$,.2f\"))\n                axisLeft(y).tickValues(yTickValues).tickFormat(format(\"$,.0f\"))\n              );\n\n            // const yLabelG = svg\n            //   .select(\"#y-axis-label\")\n            //   .data([1])\n            //   .join(\"g\")\n            //   .attr(\"transform\", \"rotate(-90)\");\n\n            // .data(nullData)\n            // .join(\"text\")\n            // .attr(\"id\", \"y-axis-label\")\n            // .attr(\"text-anchor\", \"middle\")\n            // .attr(\"x\", -innerHeight / 2)\n            // .attr(\"y\", -margin.left)\n\n            // .text(\"Amount in USD\");\n\n            chart\n              .selectAll(\".bar\")\n              .data(data)\n              .join(\"rect\")\n              .attr(\"id\", (d) => {\n                return \"id\" + d.time;\n              })\n              .attr(\"fill\", \"steelblue\")\n              .attr(\"class\", \"bar\")\n              .attr(\"x\", (d) => x(d.time) - barWidth / 2)\n              .attr(\"y\", (d) => y(d.amount))\n              .attr(\"width\", barWidth)\n              .attr(\"height\", (d) => y(0) - y(d.amount))\n              .on(\"click\", (d) => {\n                if (\n                  q.interaction === InteractionType.titration ||\n                  q.interaction === InteractionType.none\n                ) {\n                  if (d.target.__data__.amount === q.amountEarlier) {\n                    dispatch(\n                      answer({\n                        choice: ChoiceType.earlier,\n                        choiceTimestamp: DateTime.now(),\n                      })\n                    );\n                  } else if (d.target.__data__.amount === q.amountLater) {\n                    dispatch(\n                      answer({\n                        choice: ChoiceType.later,\n                        choiceTimestamp: DateTime.now(),\n                      })\n                    );\n                  }\n                }\n              });\n            var dragHandler = drag().on(\"drag\", function (d) {\n              if (\n                q.interaction === InteractionType.drag &&\n                d.subject.barType === q.variableAmount\n              ) {\n                select(this)\n                  .attr(\"y\", d.y)\n                  .attr(\"height\", y(0) - d.y);\n              }\n            });\n            dragHandler(chart.selectAll(\".bar\"));\n          },\n          [q]\n        )}\n      ></svg>\n      {q.interaction === InteractionType.drag ? (\n        <Formik\n          initialValues={{ choice: ChoiceType.Unitialized }}\n          validate={() => {\n            let errors = {};\n            return errors;\n          }}\n          onSubmit={(values, { setSubmitting, resetForm }) => {\n            setTimeout(() => {\n              dispatch(\n                answer({\n                  choice: ChoiceType.earlier,\n                  choiceTimestamp: DateTime.now(),\n                })\n              );\n              setSubmitting(false);\n              resetForm();\n            }, 400);\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Button type=\"submit\" disabled={isSubmitting}>\n                Submit\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n\n  if (status === StatusType.Complete) {\n    return <Redirect to=\"/vizsurvey/thankyou\" />;\n  } else {\n    dispatch(setQuestionShownTimestamp(Date.now()));\n    return result;\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { select, format, scaleLinear } from \"d3\";\nimport { DateTime } from \"luxon\";\nimport {\n  selectCurrentQuestion,\n  fetchStatus,\n  setQuestionShownTimestamp,\n  answer,\n} from \"../features/questionSlice\";\nimport { useD3 } from \"../hooks/useD3\";\nimport { ChoiceType } from \"../features/ChoiceType\";\nimport { StatusType } from \"../features/StatusType\";\nimport { InteractionType } from \"../features/InteractionType\";\nimport { ViewType } from \"../features/ViewType\";\n\nvar calendarMatrix = require(\"calendar-matrix\");\n\nfunction Calendar() {\n  const dispatch = useDispatch();\n  const q = useSelector(selectCurrentQuestion);\n  const status = useSelector(fetchStatus);\n\n  const monthDays = calendarMatrix(q.dateEarlier);\n  const monthNames = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  const month = q.dateEarlier.getMonth();\n  const monthName = monthNames[month];\n\n  const dpi = window.devicePixelRatio >= 2 ? 132 : 96;\n\n  const tableSquareSizeIn = Math.min(\n    q.heightIn / monthDays.length,\n    q.widthIn / 7\n  );\n\n  const tableSquareSizePx = Math.round(tableSquareSizeIn * dpi);\n\n  //   const dateMonth = question.dateEarlier.getMonth();\n  //   const dateYear = question.dateEarlier.getFullYear();\n\n  const result = (\n    <div>\n      <h2>{monthName}</h2>\n      <table\n        id=\"calendar\"\n        style={{ borderCollapse: \"collapse\", tableLayout: \"fixed\" }}\n        ref={useD3(\n          (table) => {\n            table.html(\n              `<thead>\n                <tr>\n                    <td style='text-align: center;'>Sunday</td>\n                    <td style='text-align: center;'>Monday</td>\n                    <td style='text-align: center;'>Tuesday</td>\n                    <td style='text-align: center;'>Wednesday</td>\n                    <td style='text-align: center;'>Thursday</td>\n                    <td style='text-align: center;'>Friday</td>\n                    <td style='text-align: center;'>Saturday</td>\n                </tr>\n            </thead>\n            <tbody id='calendarBody'></tbody>`\n            );\n\n            const calendar = select(\"#calendar\");\n            const tbody = calendar.select(\"#calendarBody\");\n            const rows = tbody.selectAll(\"tbody\").data(monthDays).join(\"tr\");\n\n            const earlierDay = q.dateEarlier.getDate();\n            const laterDay = q.dateLater.getDate();\n\n            const yRange = [0, q.maxAmount];\n\n            rows\n              .selectAll(\"td\")\n              .data((d) => d)\n              .join(\"td\")\n              .attr(\"id\", (d) =>\n                d === earlierDay\n                  ? \"day-earlier-amount\"\n                  : d === laterDay\n                  ? \"day-later-amount\"\n                  : \"day-\" + d\n              )\n              .attr(\"class\", function (d) {\n                return d > 0 ? \"day\" : \"day-empty\";\n              })\n              .attr(\"width\", () => tableSquareSizePx)\n              .attr(\"height\", () => tableSquareSizePx)\n              .attr(\"style\", (d) =>\n                d > 0\n                  ? \"border: 1px solid black; text-align: right; vertical-align: top; position: relative; overflow: hidden; white-space: nowrap;\"\n                  : \"border: none;\"\n              )\n              .on(\"click\", (d) => {\n                if (\n                  q.interaction === InteractionType.titration ||\n                  q.interaction === InteractionType.none\n                ) {\n                  if (d.target.__data__ === earlierDay) {\n                    dispatch(\n                      answer({\n                        choice: ChoiceType.earlier,\n                        choiceTimestamp: DateTime.now(),\n                      })\n                    );\n                  } else if (d.target.__data__ === laterDay) {\n                    dispatch(\n                      answer({\n                        choice: ChoiceType.later,\n                        choiceTimestamp: DateTime.now(),\n                      })\n                    );\n                  }\n                }\n              })\n              .each(function (d) {\n                if (d < 0) return;\n                const divText = select(this)\n                  .append(\"div\")\n                  .attr(\"style\", \"text-align: center\")\n                  .attr(\"width\", tableSquareSizePx);\n                divText\n                  .append(\"div\")\n                  .attr(\"style\", \"float: right\")\n                  .text((d) => (d > 0 ? d : \"\"));\n                if (d === earlierDay || d === laterDay) {\n                  divText\n                    .append(\"div\")\n                    .attr(\"style\", \"text-align: center; font-weight: bold;\")\n                    .text(() =>\n                      format(\"$,.0f\")(\n                        d === earlierDay ? q.amountEarlier : q.amountLater\n                      )\n                    );\n                  if (q.viewType === ViewType.calendarWord) return;\n                  const barHeight =\n                    tableSquareSizePx -\n                    select(this).select(\"div\").node().offsetHeight;\n                  const y = scaleLinear().domain(yRange).range([barHeight, 0]);\n                  const svg = select(this)\n                    .append(\"svg\")\n                    .attr(\"id\", (d) => {\n                      d === earlierDay ? \"earlier-bar\" : \"later-bar\";\n                    })\n                    .attr(\"x\", \"0 \")\n                    .attr(\"y\", \"0\")\n                    .attr(\"width\", () => tableSquareSizePx)\n                    .attr(\"height\", () => barHeight)\n                    .attr(\"style\", \"text-align: left\");\n                  svg\n                    .append(\"line\")\n                    .attr(\"x1\", \"0\")\n                    .attr(\"y1\", y(q.maxAmount))\n                    .attr(\"x2\", tableSquareSizePx)\n                    .attr(\"y2\", y(q.maxAmount))\n                    .attr(\"style\", \"stroke:black;stroke-width:1\");\n                  svg\n                    .append(\"rect\")\n                    .attr(\"fill\", \"steelblue\")\n                    .attr(\"class\", \"bar\")\n                    .attr(\"x\", \"0\")\n                    .attr(\"y\", () =>\n                      y(d === earlierDay ? q.amountEarlier : q.amountLater)\n                    )\n                    .attr(\"width\", () => {\n                      tableSquareSizePx;\n                    })\n                    .attr(\"height\", () => {\n                      const y0 = y(0);\n                      const yamt = y(\n                        d === earlierDay ? q.amountEarlier : q.amountLater\n                      );\n                      return y0 - yamt;\n                    })\n                    .attr(\"width\", tableSquareSizePx);\n                }\n              });\n          },\n          [q]\n        )}\n      ></table>\n    </div>\n  );\n\n  if (status === StatusType.Complete) {\n    return <Redirect to=\"/vizsurvey/thankyou\" />;\n  } else {\n    dispatch(setQuestionShownTimestamp(Date.now()));\n    return result;\n  }\n}\n\nexport default Calendar;\n","import MELForm from \"./MELForm\";\nimport BarChart from \"./BarChart\";\nimport Calendar from \"./Calendar\";\nimport { useSelector } from \"react-redux\";\nimport { ViewType } from \"../features/ViewType\";\nimport { selectCurrentQuestion } from \"../features/questionSlice\";\n\nexport function Survey() {\n  const question = useSelector(selectCurrentQuestion);\n\n  // Got from https://stackoverflow.com/questions/31217268/center-div-on-the-middle-of-screen\n  const divCenterContentStyle = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  };\n\n  return (\n    <div style={divCenterContentStyle}>\n      {question.viewType === ViewType.barchart ? (\n        <BarChart />\n      ) : question.viewType === ViewType.word ? (\n        <MELForm />\n      ) : (\n        <Calendar />\n      )}\n    </div>\n  );\n}\n\nexport default Survey;\n","import { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { setTreatmentId } from \"../features/questionSlice\";\n\nexport function QueryParam() {\n  const dispatch = useDispatch();\n  const search = useLocation().search;\n  const treatmentId = new URLSearchParams(search).get(\"treatment_id\");\n  dispatch(setTreatmentId(treatmentId));\n  return \"\";\n}\n\nexport default QueryParam;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Survey from \"./components/Survey\";\nimport { QueryParam } from \"./components/QueryParam\";\nimport {\n  fetchQuestions,\n  loadAllTreatments,\n  fetchAllTreatmentsStatus,\n  fetchAllTreatments,\n  selectAllQuestions,\n  startSurvey,\n  writeAnswers,\n  setParticipant,\n} from \"./features/questionSlice\";\nimport { ViewType } from \"./features/ViewType\";\nimport { InteractionType } from \"./features/InteractionType\";\nimport { FileIOAdapter } from \"./features/FileIOAdapter\";\nimport {\n  fetchTreatmentId,\n  fetchCurrentTreatment,\n} from \"./features/questionSlice\";\nimport { StatusType } from \"./features/StatusType\";\n\nconst App = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <div className=\"App\">\n          <QueryParam />\n          <Switch>\n            <Route exact path=\"/vizsurvey\" component={Home} />\n            <Route\n              exact\n              path={\"/vizsurvey/instructions\"}\n              component={Instructions}\n            />\n            <Route path=\"/vizsurvey/survey\" component={Survey} />\n            <Route path=\"/vizsurvey/thankyou\" component={ThankYou} />\n            <Route path=\"/vizsurvey/*\" component={Home} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Home = () => {\n  const treatmentId = useSelector(fetchTreatmentId);\n  const dispatch = useDispatch();\n  dispatch(loadAllTreatments());\n  const status = useSelector(fetchAllTreatmentsStatus);\n  const allTreatments = useSelector(fetchAllTreatments);\n\n  function testLinks() {\n    return (\n      <div>\n        <p>\n          This page will not be available when deployed in production since the\n          participants will be provided a link with the treatment id in the URL.\n        </p>\n        {status === StatusType.Unitialized ? (\n          <p>Please wait while all treatments are loaded...</p>\n        ) : (\n          <p>\n            <a href=\"https://github.com/pcordone/vizsurvey\">Github README.md</a>\n            <br></br>\n            <a href=\"https://github.com/pcordone\">public website</a>\n            <br></br>\n            <p>\n              Click a link below to launch one of the experiments. The\n              experimental parameters are not setup yet and are configurable\n              through a file. Right now these links give a feel for what each\n              type of stimulus is like.\n            </p>\n            <p>\n              <Link id=\"1\" to=\"/vizsurvey/instructions?treatment_id=1\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 1 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"2\" to=\"/vizsurvey/instructions?treatment_id=2\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 2 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"3\" to=\"/vizsurvey/instructions?treatment_id=3\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 3 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"4\" to=\"/vizsurvey/instructions?treatment_id=4\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 4 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"5\" to=\"/vizsurvey/instructions?treatment_id=5\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 5 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"6\" to=\"/vizsurvey/instructions?treatment_id=6\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 6 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"7\" to=\"/vizsurvey/instructions?treatment_id=7\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 7 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"8\" to=\"/vizsurvey/instructions?treatment_id=8\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 8 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"9\" to=\"/vizsurvey/instructions?treatment_id=9\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 9 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n            <p>\n              <Link id=\"10\" to=\"/vizsurvey/instructions?treatment_id=10\">\n                {\n                  allTreatments.filter(\n                    (d) => d.treatmentId === 10 && d.position === 1\n                  )[0].comment\n                }\n              </Link>\n            </p>\n          </p>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div id=\"home-text\">\n      {treatmentId === null ? (\n        testLinks()\n      ) : (\n        <Redirect to={`/vizsurvey/instructions?treatment_id=${treatmentId}`} />\n      )}\n    </div>\n  );\n};\n\nconst divCenterContentStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  width: \"500px\",\n  marginRight: \"-50%\",\n  transform: \"translate(-50%, -50%)\",\n};\n\nconst buttonCenterContentStyle = {\n  position: \"absolute\",\n  left: \"50%\",\n  marginRight: \"-50%\",\n  transform: \"translate(-50%, 0%)\",\n};\n\nconst Instructions = () => {\n  var handle = useFullScreenHandle();\n  const dispatch = useDispatch();\n  dispatch(fetchQuestions());\n  const treatment = useSelector(fetchCurrentTreatment);\n\n  function surveyButtonClicked() {\n    dispatch(startSurvey());\n    handle.enter();\n  }\n\n  return (\n    <div id=\"home-text\" style={divCenterContentStyle}>\n      <p>\n        You will be presented with a choice between two amounts of money to\n        recieve, one earlier and one later in time.\n      </p>\n      <span>\n        {(() => {\n          switch (treatment.viewType) {\n            case ViewType.word:\n              return `Click on the radio button that contains the amount you would like to\n                    receive.`;\n            case ViewType.barchart:\n              switch (treatment.interaction) {\n                case InteractionType.titration:\n                  return `Click on the bar that represents the amount that you would like to\n                        receive.  For each click, the amounts will be updated. Continue to\n                        click to choose an earlier and later amount.`;\n                case InteractionType.drag:\n                  return `Drag the bar to an amount that makes choosing the earlier option\n                        equal to the later option. Note that these amounts do not have to\n                        be literally equal dollar amounts (e.g. you would rather have $10\n                        today than even $20 a year from now).`;\n                case InteractionType.none:\n                  return `Click on the bar graph that represents the amount that you would\n                        like to choose.`;\n                default:\n                  return `Can not display <b>specific</b> instructions since the interaction \n                        type was not specified in the experiment setup/`;\n              }\n            case ViewType.calendarGraph:\n              return `Click on the day that contains the amount that you would like to\n                    receive.`;\n            case ViewType.calendarWord:\n              return `Provide calendar word instructions`;\n            case ViewType.calendarIcon:\n              return `Provide calendar icon grap instructions`;\n            default:\n              return `Cannot display <b>specific</b> instructions since a treatment has not\n                    been selected. Please select a treatment`;\n          }\n        })()}\n      </span>\n      <FullScreen handle={handle}>\n        <Link to=\"/vizsurvey/survey\">\n          <Button\n            size=\"lg\"\n            onClick={surveyButtonClicked}\n            style={buttonCenterContentStyle}\n          >\n            Start Survey\n          </Button>\n        </Link>\n      </FullScreen>\n    </div>\n  );\n};\n\nconst uuid = uuidv4();\nconst ThankYou = () => {\n  const dispatch = useDispatch();\n  dispatch(setParticipant(uuid));\n  const answers = useSelector(selectAllQuestions);\n  const io = new FileIOAdapter();\n  const csv = io.convertToCSV(answers);\n  dispatch(writeAnswers(csv));\n  const handle = useFullScreenHandle();\n\n  return (\n    <FullScreen handle={handle}>\n      <div id=\"home-text\" style={divCenterContentStyle}>\n        <p>\n          Your answers have been submitted. Thank you for taking this survey!\n        </p>\n        <p>\n          Your unique ID is:&nbsp;\n          <input type=\"text\" value={uuid} style={{ width: \"340px\" }} readOnly />\n          &nbsp;\n          <Button\n            size=\"sm\"\n            onClick={() => {\n              navigator.clipboard.writeText(uuid);\n            }}\n          >\n            Copy\n          </Button>\n          . Please go back to Amazon Turk and present this unique ID in the\n          form.\n        </p>\n        <Button\n          size=\"lg\"\n          onClick={() => {\n            handle.enter();\n            setTimeout(() => {\n              handle.exit();\n            }, 400);\n          }}\n          style={buttonCenterContentStyle}\n        >\n          Exit Fullscreen\n        </Button>\n      </div>\n    </FullScreen>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { enableAllPlugins } from \"immer\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}