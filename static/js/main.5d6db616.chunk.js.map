{"version":3,"sources":["features/Question.js","features/ViewType.js","features/InteractionType.js","features/VariableType.js","features/FileIOAdapter.js","features/treatments.js","features/StatusType.js","features/ChoiceType.js","features/Answer.js","features/questionSlice.js","features/QuestionEngine.js","app/store.js","components/MELForm.js","hooks/useD3.js","components/BarChart.js","components/Calendar.js","components/Survey.js","components/QueryParam.js","App.js","reportWebVitals.js","index.js"],"names":["Question","treatmentId","position","viewType","interaction","variableAmount","amountEarlier","timeEarlier","dateEarlier","amountLater","timeLater","dateLater","maxAmount","maxTime","horizontalPixels","verticalPixels","leftMarginWidthIn","bottomMarginHeightIn","graphWidthIn","graphHeightIn","width","height","comment","this","highup","lowdown","ViewType","Enumify","word","barchart","calendar","_","closeEnum","InteractionType","none","drag","titration","VariableType","earlierAmount","laterAmount","FileIOAdapter","fetchQuestions","csvParse","e","fromCSVRow","filter","d","sort","a","b","writeAnswers","answersCSV","getState","state","console","log","JSON","stringify","row","treatment_id","enumValueOf","view_type","variable_amount","amount_earlier","time_earlier","undefined","date_earlier","Date","amount_later","time_later","date_later","max_amount","max_time","horizontal_pixels","vertical_pixels","left_margin_width","bottom_margin_height","graph_width_in","graph_height_in","answers","rows","map","choice","shownTimestamp","choiceTimestamp","participantCode","concat","join","StatusType","ChoiceType","unitialized","earlier","later","Answer","qe","questions","currentQuestionIdx","treatment","currentTreatment","latestAnswer","length","answer","push","createNextAnswer","action","payload","isLastTreatment","status","currentTreatmentAndLatestAnswer","possibleHighup","possibleLowdown","assert","titratingAmount","override","titrationAmount","adjustmentAmount","parseInt","toFormat","incNextQuestion","calcTitrationAmount","updateHighupOrLowdown","newAmount","calcNewAmount","io","createAsyncThunk","questionSlice","createSlice","name","initialState","participantId","error","reducers","setParticipant","setTreatmentId","startSurvey","setQuestionShownTimestamp","setLatestAnswerShown","answerCurrentQuestion","selectAllQuestions","allQuestions","fetchCurrentTreatment","selectCurrentQuestion","fetchStatus","fetchTreatmentId","actions","store","configureStore","reducer","questionReducer","middleware","getDefaultMiddleware","MELForm","dispatch","useDispatch","q","useSelector","question1stPartText","sooner_time","result","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","setTimeout","DateTime","now","isSubmitting","role","className","type","value","style","color","fontWeight","component","Button","disabled","to","useD3","renderChartFn","dependencies","ref","React","useRef","useEffect","d3","current","BarChart","props","margin","top","top_margin","right","right_margin","bottom","bottom_margin","left","left_margin","totalHeight","totalWidth","xTickValues","Array","from","keys","data","time","amount","barType","Container","fluid","Row","Col","svg","chart","selectAll","attr","x","scaleLinear","domain","range","yRange","y","call","axisBottom","tickValues","tickFormat","format","yTickValues","axisLeft","barWidth","on","target","__data__","subject","select","dragHandler","Unitialized","calendarMatrix","require","Calendar","marginLeft","marginRight","id","table","monthDays","monthName","getMonth","html","text","earlierDay","getDate","laterDay","Survey","question","QueryParam","search","useLocation","URLSearchParams","get","App","exact","path","Home","Instructions","ThankYou","href","handle","useFullScreenHandle","size","onClick","enter","uuid","uuidv4","csv","convertToCSV","exit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","enableAllPlugins","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d6db616.chunk.js","sourcesContent":["export class Question {\n  constructor({\n    treatmentId,\n    position,\n    viewType,\n    interaction,\n    variableAmount,\n    amountEarlier,\n    timeEarlier,\n    dateEarlier,\n    amountLater,\n    timeLater,\n    dateLater,\n    maxAmount,\n    maxTime,\n    horizontalPixels,\n    verticalPixels,\n    leftMarginWidthIn,\n    bottomMarginHeightIn,\n    graphWidthIn,\n    graphHeightIn,\n    width,\n    height,\n    comment,\n  }) {\n    this.treatmentId = treatmentId;\n    this.position = position;\n    this.viewType = viewType;\n    this.interaction = interaction;\n    this.variableAmount = variableAmount;\n    this.amountEarlier = amountEarlier;\n    this.timeEarlier = timeEarlier;\n    this.dateEarlier = dateEarlier;\n    this.amountLater = amountLater;\n    this.timeLater = timeLater;\n    this.dateLater = dateLater;\n    this.maxAmount = maxAmount;\n    this.maxTime = maxTime;\n    this.horizontalPixels = horizontalPixels;\n    this.verticalPixels = verticalPixels;\n    this.leftMarginWidthIn = leftMarginWidthIn;\n    this.bottomMarginHeightIn = bottomMarginHeightIn;\n    this.graphWidthIn = graphWidthIn;\n    this.graphHeightIn = graphHeightIn;\n    this.width = width;\n    this.height = height;\n    this.comment = comment;\n    this.highup = null;\n    this.lowdown = null;\n  }\n}\n","import { Enumify } from \"enumify\";\n\nexport class ViewType extends Enumify {\n  static word = new ViewType();\n  static barchart = new ViewType();\n  static calendar = new ViewType();\n  static _ = this.closeEnum();\n}\n","import { Enumify } from \"enumify\";\n\nexport class InteractionType extends Enumify {\n  static none = new InteractionType();\n  static drag = new InteractionType();\n  static titration = new InteractionType();\n  static _ = this.closeEnum();\n}\n","import { Enumify } from \"enumify\";\n\nexport class VariableType extends Enumify {\n  static none = new VariableType();\n  static earlierAmount = new VariableType();\n  static laterAmount = new VariableType();\n  static _ = this.closeEnum();\n}\n","import { csvParse } from \"d3\";\n// import { Octokit } from \"octokit\";\n// import { DateTime } from \"luxon\";\nimport { TREATMENTS_CSV } from \"./treatments\";\nimport { Question } from \"./Question\";\nimport { ViewType } from \"./ViewType\";\nimport { InteractionType } from \"./InteractionType\";\nimport { VariableType } from \"./VariableType\";\n\nexport class FileIOAdapter {\n  constructor() {}\n\n  fetchQuestions = (treatmentId) => {\n    treatmentId = +treatmentId;\n    const questions = csvParse(TREATMENTS_CSV, (e) => {\n      return this.fromCSVRow(e);\n    })\n      .filter((d) => d.treatmentId === treatmentId)\n      .sort((a, b) =>\n        a.position < b.position ? -1 : a.position === b.position ? 0 : 1\n      );\n    return questions;\n  };\n\n  fromCSVRow(row) {\n    return new Question({\n      treatmentId: +row.treatment_id,\n      position: +row.position,\n      viewType: ViewType.enumValueOf(row.view_type),\n      interaction: InteractionType.enumValueOf(row.interaction),\n      variableAmount: VariableType.enumValueOf(row.variable_amount),\n      amountEarlier: +row.amount_earlier,\n      timeEarlier: row.time_earlier ? +row.time_earlier : undefined,\n      dateEarlier: row.date_earlier ? new Date(row.date_earlier) : undefined,\n      amountLater: +row.amount_later,\n      timeLater: row.time_later ? +row.time_later : undefined,\n      dateLater: row.date_later ? new Date(row.date_later) : undefined,\n      maxAmount: +row.max_amount,\n      maxTime: +row.max_time,\n      horizontalPixels: +row.horizontal_pixels,\n      verticalPixels: +row.vertical_pixels,\n      leftMarginWidthIn: +row.left_margin_width,\n      bottomMarginHeightIn: +row.bottom_margin_height,\n      graphWidthIn: +row.graph_width_in,\n      graphHeightIn: +row.graph_height_in,\n      width: +row.width,\n      height: +row.height,\n      comment: row.comment,\n    });\n  }\n\n  convertToCSV(answers) {\n    const header = [\n      \"treatment_id,position,view_type,interaction,variable_amount,amount_earlier,time_earlier,date_earlier,amount_later,time_later,date_later,max_amount,max_time,vertical_pixels,horizontal_pixels,choice,shown_timestamp,choice_timestamp,highup,lowdown,participant_code\",\n    ];\n    const rows = answers.map(\n      (a) =>\n        `${a.treatmentId}, ${a.position}, ${a.viewType}, ${a.interaction}, ${a.variableAmount}, ${a.amountEarlier}, ${a.timeEarlier}, ${a.dateEarlier}, ${a.amountLater}, ${a.timeLater}, ${a.dateLater}, ${a.maxAmount}, ${a.maxTime}, ${a.verticalPixels}, ${a.horizontalPixels}, ${a.choice}, ${a.shownTimestamp}, ${a.choiceTimestamp}, ${a.highup}, ${a.lowdown}, ${a.participantCode}`\n    );\n    return header.concat(rows).join(\"\\n\");\n  }\n\n  writeAnswers = async (answersCSV, { getState }) => {\n    const state = getState();\n    console.log(answersCSV);\n    console.log(JSON.stringify(state));\n    // const octokit = new Octokit({\n    //   userAgent: \"thesis_answers/v1.0\",\n    //   // eslint-disable-next-line no-undef\n    //   auth: atob(process.env.REACT_APP_AUTH_TOKEN),\n    // });\n    // // eslint-disable-next-line no-undef\n    // const gistAnswerId = process.env.REACT_APP_GIST_ANSWER_ID;\n    // const url = `PATCH /gists/${gistAnswerId}`;\n    // const now = DateTime.now().toFormat(\"yyyy-MM-dd-H-mm-ss-SSS-ZZZZ\");\n    // const files = {};\n    // answersCSV = `${answersCSV}`;\n    // files[`answers-subject-${state.questions.participant_id}-${now}.csv`] = {\n    //   content: answersCSV,\n    // };\n    // const description = `Answer results for participant ${state.questions.participant_id} at ${now}`;\n    // console.log(\"submitting answers for \" + description);\n    // const payloadObj = {\n    //   gist_id: gistAnswerId,\n    //   description: description,\n    //   files: files,\n    // };\n    // const response = await octokit.request(url, payloadObj);\n\n    // const status = response.status;\n    // console.log(\"answers submitted with status of \" + status);\n  };\n}\n","export const TREATMENTS_CSV = `treatment_id,position,view_type,interaction,variable_amount,amount_earlier,time_earlier,date_earlier,amount_later,time_later,date_later,max_amount,max_time,horizontal_pixels,vertical_pixels,left_margin_width_in,bottom_margin_height_in,graph_width_in,graph_height_in,width_in,height_in,comment\n1,1,word,none,none,500,2,,1000,5,,,10,,,,,,,,,\"Read 2001 example, absolute size\"\n1,2,word,none,none,50,2,,300,7,,,10,,,,,,,,,\"Read 2001 example, absolute size\"\n1,3,word,none,none,250,2,,1000,3,,,10,,,,,,,,,\"Read 2001 example, absolute size\"\n2,1,barchart,none,none,300,2,,700,5,,1100,10,600,600,0.5,0.5,6,6,6.5,6.5,\"Read 2001 example, absolute size\"\n2,2,barchart,none,none,500,2,,800,7,,1100,15,600,600,0.5,0.5,6,6,6.5,6.5,\"Read 2001 example, absolute size\"\n2,3,barchart,none,none,300,2,,1000,7,,1100,15,600,600,0.5,0.5,3,3,3.5,3.5,\"Read 2001 example, absolute size\"\n3,1,calendar,none,none,500,,2/1/22,1000,,2/22/22,,,600,600,,,,,6.5,6.5,\"Read 2001 example, absolute size\"\n4,1,barchart,drag,laterAmount,500,2,,1000,10,,1500,10,600,600,0.5,0.5,6,6,6.5,6.5,\"Read 2001 example, absolute size\"\n5,1,word,titration,laterAmount,500,2,,1000,3,,,10,,,,,,,,,\"Read 2001 example, absolute size\"\n6,1,barchart,titration,laterAmount,500,2,,1000,10,,1500,10,600,600,0.5,0.5,6,6,6.5,6.5,\"Read 2001 example, absolute size\"\n`;\n","export const StatusType = {\n  Unitialized: \"Unitialized\",\n  Fetching: \"Fetching\",\n  Fetched: \"Fetched\",\n  Complete: \"Complete\",\n  Error: \"Error\",\n};\n","export const ChoiceType = {\n  unitialized: \"unitialized\",\n  earlier: \"earlier\",\n  later: \"later\",\n};\n","export class Answer {\n  constructor({\n    treatmentId: treatmentId,\n    position: position,\n    viewType: viewType,\n    interaction: interaction,\n    variableAmount: variableAmount,\n    amountEarlier: amountEarlier,\n    timeEarlier: timeEarlier,\n    dateEarlier: dateEarlier,\n    amountLater: amountLater,\n    timeLater: timeLater,\n    dateLater: dateLater,\n    maxAmount: maxAmount,\n    maxTime: maxTime,\n    verticalPixels: verticalPixels,\n    horizontalPixels: horizontalPixels,\n    choice: choice,\n    shownTimestamp: shownTimestamp,\n    choiceTimestamp: choiceTimestamp,\n    highup: highup,\n    lowdown: lowdown,\n    participantCode: participantCode,\n  }) {\n    this.treatmentId = treatmentId;\n    this.position = position;\n    this.viewType = viewType;\n    this.interaction = interaction;\n    this.variableAmount = variableAmount;\n    this.amountEarlier = amountEarlier;\n    this.timeEarlier = timeEarlier;\n    this.dateEarlier = dateEarlier;\n    this.amountLater = amountLater;\n    this.timeLater = timeLater;\n    this.dateLater = dateLater;\n    this.maxAmount = maxAmount;\n    this.maxTime = maxTime;\n    this.verticalPixels = verticalPixels;\n    this.horizontalPixels = horizontalPixels;\n    this.choice = choice;\n    this.shownTimestamp = shownTimestamp;\n    this.choiceTimestamp = choiceTimestamp;\n    this.highup = highup;\n    this.lowdown = lowdown;\n    this.participantCode = participantCode;\n  }\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { FileIOAdapter } from \"./FileIOAdapter\";\nimport { QuestionEngine } from \"./QuestionEngine\";\nimport { StatusType } from \"./StatusType\";\n\n// Define the initial state of the store for this slicer.\nconst qe = new QuestionEngine();\nconst io = new FileIOAdapter();\n\nexport const writeAnswers = createAsyncThunk(\n  \"survey/writeAnswers\",\n  io.writeAnswers\n);\n\nexport const questionSlice = createSlice({\n  name: \"questions\", // I believe the global state is partitioned by the name value thus the terminology \"slice\"\n  initialState: {\n    treatmentId: null,\n    participantId: null,\n    questions: [],\n    answers: [],\n    currentQuestionIdx: 0,\n    highup: undefined,\n    lowdown: undefined,\n    status: StatusType.Unitialized,\n    error: null,\n  }, // the initial state of our global data (under name slice)\n  reducers: {\n    setParticipant(state, action) {\n      state.participantId = action.payload;\n      return state;\n    },\n    setTreatmentId(state, action) {\n      state.treatmentId = action.payload;\n      return state;\n    },\n    fetchQuestions(state) {\n      state.questions = io.fetchQuestions(state.treatmentId);\n      state.status = StatusType.Fetched;\n      return state;\n    },\n    startSurvey(state) {\n      qe.startSurvey(state);\n      return state;\n    },\n    setQuestionShownTimestamp(state, action) {\n      qe.setLatestAnswerShown(state, action);\n      return state;\n    },\n    // we define our actions on the slice of global store data here.\n    answer(state, action) {\n      qe.answerCurrentQuestion(state, action);\n    },\n  },\n});\n\nexport const selectAllQuestions = (state) => {\n  return qe.allQuestions(state.questions);\n};\n\nexport const fetchCurrentTreatment = (state) => {\n  const result = qe.currentTreatment(state.questions);\n  return result;\n};\n\nexport const selectCurrentQuestion = (state) => {\n  return qe.latestAnswer(state.questions);\n};\n\nexport const fetchStatus = (state) => {\n  return state.questions.status;\n};\n\nexport const fetchTreatmentId = (state) => {\n  return state.questions.treatmentId;\n};\n\n// Action creators are generated for each case reducer function\nexport const {\n  fetchQuestions,\n  startSurvey,\n  setQuestionShownTimestamp,\n  answer,\n  setParticipant,\n  setTreatmentId,\n} = questionSlice.actions;\n\nexport default questionSlice.reducer;\n","import { StatusType } from \"./StatusType\";\nimport { VariableType } from \"./VariableType\";\nimport { InteractionType } from \"./InteractionType\";\nimport { ChoiceType } from \"./ChoiceType\";\nimport { Answer } from \"./Answer\";\n\nexport const TIMESTAMP_FORMAT = \"MM/dd/yyyy H:mm:ss:SSS ZZZZ\";\n\n// TODO Need to capture errors in processing by settings state.status = StatusType.Error\nexport class QuestionEngine {\n  constructor() {}\n\n  currentTreatment(state) {\n    return state.questions[state.currentQuestionIdx];\n  }\n\n  currentTreatmentAndLatestAnswer(state) {\n    const treatment = this.currentTreatment(state);\n    const latestAnswer = this.latestAnswer(state);\n\n    return { treatment, latestAnswer };\n  }\n\n  latestAnswer(state) {\n    return state.answers.length === 0\n      ? null\n      : state.answers[state.answers.length - 1];\n  }\n\n  createNextAnswer(\n    treatment,\n    answers,\n    amountEarlier,\n    amountLater,\n    highup,\n    lowdown\n  ) {\n    const answer = new Answer({\n      treatmentId: treatment.treatmentId,\n      position: treatment.position,\n      viewType: treatment.viewType,\n      interaction: treatment.interaction,\n      variableAmount: treatment.variableAmount,\n      amountEarlier: amountEarlier,\n      timeEarlier: treatment.timeEarlier,\n      dateEarlier: treatment.dateEarlier,\n      amountLater: amountLater,\n      timeLater: treatment.timeLater,\n      dateLater: treatment.dateLater,\n      maxAmount: treatment.maxAmount,\n      maxTime: treatment.maxTime,\n      verticalPixels: treatment.verticalPixels,\n      horizontalPixels: treatment.horizontalPixels,\n      choice: ChoiceType.unitialized,\n      highup: highup,\n      lowdown: lowdown,\n    });\n    answers.push(answer);\n  }\n\n  allQuestions(state) {\n    return state.answers;\n  }\n\n  startSurvey(state) {\n    state.currentQuestionIdx = 0;\n    const treatment = this.currentTreatment(state);\n    state.highup =\n      treatment.variableAmount === VariableType.laterAmount\n        ? treatment.amountEarlier\n        : treatment.amountLater;\n    state.lowdown = undefined;\n    this.createNextAnswer(\n      treatment,\n      state.answers,\n      treatment.amountEarlier,\n      treatment.amountLater,\n      state.highup,\n      state.lowdown\n    );\n  }\n\n  setLatestAnswerShown(state, action) {\n    this.latestAnswer(state).shownTimestamp = action.payload;\n  }\n\n  isLastTreatment(state) {\n    return state.currentQuestionIdx === state.questions.length - 1;\n  }\n\n  incNextQuestion(state) {\n    if (this.isLastTreatment(state)) {\n      state.status = StatusType.Complete;\n    } else {\n      state.currentQuestionIdx += 1;\n      const treatment = this.currentTreatment(state);\n      this.createNextAnswer(\n        treatment,\n        state.answers,\n        treatment.amountEarlier,\n        treatment.amountLater\n      );\n    }\n  }\n\n  updateHighupOrLowdown(state) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    switch (latestAnswer.choice) {\n      case ChoiceType.earlier:\n        var possibleHighup =\n          treatment.variableAmount === VariableType.laterAmount\n            ? latestAnswer.amountLater\n            : latestAnswer.amountEarlier;\n        if (!state.highup || possibleHighup > state.highup)\n          state.highup = possibleHighup;\n        break;\n      case ChoiceType.later:\n        var possibleLowdown =\n          treatment.variableAmount === VariableType.laterAmount\n            ? latestAnswer.amountLater\n            : latestAnswer.amountEarlier;\n        if (!state.lowdown || possibleLowdown < state.lowdown)\n          state.lowdown = possibleLowdown;\n        break;\n      default:\n        console.assert(\n          true,\n          \"Invalid value for current answer in setAnswerCurrentQuestion\"\n        );\n        break;\n    }\n  }\n\n  calcTitrationAmount(titratingAmount, highup, override) {\n    return (override ? override : titratingAmount - highup) / 2;\n  }\n\n  calcNewAmount(state, titrationAmount) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    var adjustmentAmount;\n    switch (treatment.variableAmount) {\n      case VariableType.laterAmount:\n        console.assert(\n          latestAnswer.choice && latestAnswer.choice !== ChoiceType.unitialized\n        );\n        adjustmentAmount =\n          latestAnswer.choice === ChoiceType.earlier\n            ? titrationAmount\n            : -1 * titrationAmount;\n        return (\n          parseInt((latestAnswer.amountLater + adjustmentAmount) / 10) * 10\n        );\n      case VariableType.earlierAmount:\n        adjustmentAmount =\n          latestAnswer.choice === ChoiceType.earlier\n            ? -1 * titrationAmount\n            : titrationAmount;\n        return (\n          parseInt((latestAnswer.amountEarlier + adjustmentAmount) / 10) * 10\n        );\n      default:\n        console.assert(\n          true,\n          \"Invalid value for question titration type in calcEarlierAndLaterAmounts\"\n        );\n        break;\n    }\n  }\n\n  answerCurrentQuestion(state, action) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    latestAnswer.choice = action.payload.choice;\n    latestAnswer.choiceTimestamp =\n      action.payload.choiceTimestamp.toFormat(TIMESTAMP_FORMAT);\n    if (\n      treatment.interaction === InteractionType.none ||\n      treatment.interaction === InteractionType.drag\n    ) {\n      this.incNextQuestion(state);\n    } else if (treatment.interaction === InteractionType.titration) {\n      const titrationAmount = this.calcTitrationAmount(\n        treatment.variableAmount === VariableType.laterAmount\n          ? latestAnswer.amountLater\n          : latestAnswer.amountEarlier,\n        state.highup,\n        latestAnswer.length === 1 ? state.highup : null\n      );\n      this.updateHighupOrLowdown(state);\n      // TODO we need a termination condition for runaway titration\n      if (state.lowdown - state.highup <= 10) {\n        this.incNextQuestion(state);\n      } else {\n        const newAmount = this.calcNewAmount(state, titrationAmount);\n        if (treatment.variableAmount === VariableType.laterAmount) {\n          this.createNextAnswer(\n            treatment,\n            state.answers,\n            treatment.amountEarlier,\n            newAmount\n          );\n        } else if (treatment.variableAmount === VariableType.earlierAmount) {\n          this.createNextAnswer(\n            treatment,\n            state.answers,\n            newAmount,\n            treatment.amountLater\n          );\n        } else {\n          console.assert(\n            true,\n            \"Titration not set to amountEarlier or amountLater before calling answerCurrentQuestion\"\n          );\n        }\n      }\n    }\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport questionReducer from \"../features/questionSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    questions: questionReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n});\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { DateTime } from \"luxon\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button } from \"react-bootstrap\";\nimport { ChoiceType } from \"../features/ChoiceType\";\nimport { StatusType } from \"../features/StatusType\";\nimport {\n  selectCurrentQuestion,\n  fetchStatus,\n  setQuestionShownTimestamp,\n  answer,\n} from \"../features/questionSlice\";\n\nexport function MELForm() {\n  const dispatch = useDispatch();\n  const q = useSelector(selectCurrentQuestion);\n  const status = useSelector(fetchStatus);\n\n  // Absolute money value, delay framing (e.g., $5 today vs. $5 plus an additional $5 in 4 weeks)\n  // Relative money value, delay framing (e.g., $5 today vs. $5 plus an additional 100% in 4 weeks)\n  // Standard MEL format (e.g., $5 today vs. $10 in 4 weeks)\n  // Relative money value, speedup framing (e.g., $10 in 4 weeks vs. $10 minus 50% today)\n  // Absolute money value, speedup framing (e.g., $10 in 4 weeks vs. $10 minus $5 today)\n\n  const todayText = (sooner_time) =>\n    sooner_time === 0 ? \"today\" : `in ${sooner_time} weeks`;\n\n  // function questionText() {\n  //   return `${question1stPartText()} vs. ${question2ndPartText()}`;\n  // }\n\n  function question1stPartText() {\n    return `$${q.amountEarlier} ${todayText(q.timeEarlier)}`;\n  }\n\n  function question2ndPartText() {\n    return `$${q.amountLater} in ${q.timeLater} weeks`;\n  }\n\n  const result = (\n    <Formik\n      initialValues={{ choice: ChoiceType.unitialized }}\n      validate={(values) => {\n        let errors = {};\n        if (!values.choice || values.choice === ChoiceType.unitialized) {\n          errors.choice = \"Please choose a selection to continue.\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          dispatch(\n            answer({\n              choice: values.choice,\n              choiceTimestamp: DateTime.now(),\n            })\n          );\n          setSubmitting(false);\n          resetForm();\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div\n            role=\"group\"\n            aria-labelledby=\"my-radio-group\"\n            className=\"radio-choice-label\"\n          >\n            <label>\n              <Field type=\"radio\" name=\"choice\" value={ChoiceType.earlier} />\n              &nbsp;{question1stPartText()}\n            </label>\n            <br></br>\n            <label>\n              <Field type=\"radio\" name=\"choice\" value={ChoiceType.later} />\n              &nbsp;{question2ndPartText()}\n            </label>\n            <span style={{ color: \"red\", fontWeight: \"bold\" }}>\n              <ErrorMessage name=\"choice\" component=\"div\" />\n            </span>\n          </div>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n\n  if (status === StatusType.Complete) {\n    return <Redirect to=\"/vizsurvey/thankyou\" />;\n  } else {\n    dispatch(setQuestionShownTimestamp(Date.now()));\n    return result;\n  }\n}\n\nexport default MELForm;\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n\n  return ref;\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  range,\n  format,\n  drag,\n  select,\n} from \"d3\";\nimport { Formik, Form } from \"formik\";\nimport { Button } from \"react-bootstrap\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { DateTime } from \"luxon\";\nimport { useD3 } from \"../hooks/useD3\";\nimport { ChoiceType } from \"../features/ChoiceType\";\nimport { StatusType } from \"../features/StatusType\";\nimport { InteractionType } from \"../features/InteractionType\";\nimport { VariableType } from \"../features/VariableType\";\nimport {\n  selectCurrentQuestion,\n  fetchStatus,\n  setQuestionShownTimestamp,\n  answer,\n} from \"../features/questionSlice\";\n\nfunction BarChart(props) {\n  const dispatch = useDispatch();\n  const q = useSelector(selectCurrentQuestion);\n  const status = useSelector(fetchStatus);\n\n  const barWidth = 15;\n\n  const height = q.verticalPixels;\n  const width = q.horizontalPixels;\n  const margin = {\n    top: props.top_margin,\n    right: props.right_margin,\n    bottom: props.bottom_margin,\n    left: props.left_margin,\n  };\n\n  const totalHeight = height + parseInt(margin.top) + parseInt(margin.bottom);\n  const totalWidth = width + parseInt(margin.left) + parseInt(margin.right);\n\n  const xTickValues = Array.from(Array(q.maxTime + 1).keys());\n  const data = xTickValues.map((d) => {\n    if (d === q.timeEarlier) {\n      return {\n        time: d,\n        amount: q.amountEarlier,\n        barType: VariableType.earlierAmount,\n      };\n    } else if (d === q.timeLater) {\n      return {\n        time: d,\n        amount: q.amountLater,\n        barType: VariableType.laterAmount,\n      };\n    } else {\n      return { time: d, amount: 0, barType: VariableType.none };\n    }\n  });\n\n  const result = (\n    <Container fluid>\n      <Row>\n        <Col>\n          <svg\n            width={`${totalWidth}`}\n            height={`${totalHeight}`}\n            ref={useD3(\n              (svg) => {\n                var chart = svg\n                  .selectAll(\".plot-area\")\n                  .data([null])\n                  .join(\"g\")\n                  .attr(\"class\", \"plot-area\")\n                  .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n                const x = scaleLinear()\n                  .domain([0, q.maxTime])\n                  .range([0, width]);\n\n                const yRange = [0, q.maxAmount];\n                const y = scaleLinear().domain(yRange).range([height, 0]);\n\n                chart\n                  .selectAll(\".x-axis\")\n                  .data([null])\n                  .join(\"g\")\n                  .attr(\"transform\", `translate(0,${height})`)\n                  .attr(\"class\", \"x-axis\")\n                  .call(\n                    axisBottom(x)\n                      .tickValues(xTickValues)\n                      .tickFormat(format(\",.0f\"))\n                  );\n\n                const yTickValues = range(yRange[0], yRange[1], yRange[1] / 5);\n                yTickValues.push(yRange[1]);\n\n                chart\n                  .selectAll(\".y-axis\")\n                  .data([null])\n                  .join(\"g\")\n                  .attr(\"class\", \"y-axis\")\n                  //.attr(\"transform\", `translate(${margin.left},${margin.bottom})`)\n                  .call(\n                    //axisLeft(y).tickValues(yTickValues).tickFormat(d3.format(\"$,.2f\"))\n                    axisLeft(y)\n                      .tickValues(yTickValues)\n                      .tickFormat(format(\"$,.0f\"))\n                  );\n\n                // const yLabelG = svg\n                //   .select(\"#y-axis-label\")\n                //   .data([1])\n                //   .join(\"g\")\n                //   .attr(\"transform\", \"rotate(-90)\");\n\n                // .data(nullData)\n                // .join(\"text\")\n                // .attr(\"id\", \"y-axis-label\")\n                // .attr(\"text-anchor\", \"middle\")\n                // .attr(\"x\", -innerHeight / 2)\n                // .attr(\"y\", -margin.left)\n\n                // .text(\"Amount in USD\");\n\n                chart\n                  .selectAll(\".bar\")\n                  .data(data)\n                  .join(\"rect\")\n                  .attr(\"fill\", \"steelblue\")\n                  .attr(\"class\", \"bar\")\n                  .attr(\"x\", (d) => x(d.time) - barWidth / 2)\n                  .attr(\"width\", barWidth)\n                  .attr(\"y\", (d) => y(d.amount))\n                  .attr(\"id\", (d) => {\n                    return \"id\" + d.time;\n                  })\n                  .on(\"click\", (d) => {\n                    if (\n                      q.interaction === InteractionType.titration ||\n                      q.interaction === InteractionType.none\n                    ) {\n                      if (d.target.__data__.amount === q.amountEarlier) {\n                        dispatch(\n                          answer({\n                            choice: ChoiceType.earlier,\n                            choiceTimestamp: DateTime.now(),\n                          })\n                        );\n                      } else if (d.target.__data__.amount === q.amountLater) {\n                        dispatch(\n                          answer({\n                            choice: ChoiceType.later,\n                            choiceTimestamp: DateTime.now(),\n                          })\n                        );\n                      }\n                    }\n                  })\n                  .attr(\"height\", (d) => y(0) - y(d.amount));\n                var dragHandler = drag().on(\"drag\", function (d) {\n                  if (\n                    q.interaction === InteractionType.drag &&\n                    d.subject.barType === q.variableAmount\n                  ) {\n                    select(this)\n                      .attr(\"y\", d.y)\n                      .attr(\"height\", y(0) - d.y);\n                  }\n                });\n                dragHandler(chart.selectAll(\".bar\"));\n              },\n              [q]\n            )}\n          ></svg>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {q.interaction === InteractionType.drag ? (\n            <Formik\n              initialValues={{ choice: ChoiceType.Unitialized }}\n              validate={() => {\n                let errors = {};\n                return errors;\n              }}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                setTimeout(() => {\n                  dispatch(\n                    answer({\n                      choice: ChoiceType.earlier,\n                      choiceTimestamp: DateTime.now(),\n                    })\n                  );\n                  setSubmitting(false);\n                  resetForm();\n                }, 400);\n              }}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <Button type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            \"\"\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n\n  if (status === StatusType.Complete) {\n    return <Redirect to=\"/vizsurvey/thankyou\" />;\n  } else {\n    dispatch(setQuestionShownTimestamp(Date.now()));\n    return result;\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion } from \"../features/questionSlice\";\n\nimport * as d3 from \"d3\";\nimport { useD3 } from \"../hooks/useD3\";\nvar calendarMatrix = require(\"calendar-matrix\");\n\nfunction Calendar(props) {\n  const q = useSelector(selectCurrentQuestion);\n\n  const height = q.verticalPixels;\n  const width = q.horizontalPixels;\n  const margin = {\n    top: props.top_margin,\n    right: props.right_margin,\n    bottom: props.bottom_margin,\n    left: props.left_margin,\n  };\n\n  const totalHeight = height + parseInt(margin.top) + parseInt(margin.bottom);\n  const totalWidth = width + parseInt(margin.left) + parseInt(margin.right);\n\n  const style = {\n    height: totalHeight,\n    width: totalWidth,\n    marginLeft: margin.left + \"px\",\n    marginRight: margin.right + \"px\",\n  };\n\n  //   const dateMonth = question.dateEarlier.getMonth();\n  //   const dateYear = question.dateEarlier.getFullYear();\n\n  return (\n    <table\n      id=\"calendar\"\n      ref={useD3((table) => {\n        const monthDays = calendarMatrix(q.dateEarlier);\n        const monthNames = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ];\n        const month = q.dateEarlier.getMonth();\n        const monthName = monthNames[month];\n        table.html(\n          `<thead>\n                <tr>\n                    <td span='7'>\n                        <h2 id='currentMonth'></h2>\n                    </td>\n                </tr>\n                <tr>\n                    <td style='text-align: center;'>Sunday</td>\n                    <td style='text-align: center;'>Monday</td>\n                    <td style='text-align: center;'>Tuesday</td>\n                    <td style='text-align: center;'>Wednesday</td>\n                    <td style='text-align: center;'>Thursday</td>\n                    <td style='text-align: center;'>Friday</td>\n                    <td style='text-align: center;'>Saturday</td>\n                </tr>\n            </thead>\n            <tbody id='calendarBody'></tbody>`\n        );\n\n        const calendar = d3.select(\"#calendar\");\n\n        calendar\n          .select(\"#currentMonth\")\n          .data([monthName])\n          .join(\"h2\")\n          .text((d) => d);\n\n        const tbody = calendar.select(\"#calendarBody\");\n\n        const rows = tbody.selectAll(\"tbody\").data(monthDays).join(\"tr\");\n\n        const earlierDay = q.dateEarlier.getDate();\n        const laterDay = q.dateLater.getDate();\n        rows\n          .selectAll(\"td\")\n          .data((d) => d)\n          .join(\"td\")\n          .attr(\"class\", function (d) {\n            return d > 0 ? \"calendarDay\" : \"calendarDayEmpty\";\n          })\n          .attr(\"id\", (d) => \"calendarDay-\" + d)\n          .html((d) => {\n            if (d === earlierDay || d === laterDay) {\n              return `<div>${d}</div><svg id='${\n                d === earlierDay ? \"earlierAmount\" : \"laterAmount\"\n              }'></svg>`;\n            } else if (d > 0) {\n              return d;\n            } else {\n              return \"\";\n            }\n          });\n\n        const earlierAmountSVG = rows.select(\"#earlierAmount\");\n\n        earlierAmountSVG\n          .select(\"text\")\n          .data([q.amountEarlier])\n          .join(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"class\", \"earlier-amount\")\n          .text((d) => d);\n\n        //   .text(function (d) {\n        //     return d > 0 ? d : \"\";\n        //   });\n\n        // const cellId = \"#calendarDay-\" + question.dateEarlier.getDay();\n        // const earlierDayCell = rows.select(cellId);\n        // const earlierDayHTML = `<td id=\"${cellId}`\n\n        // earlierDayCell.html(earlierDayCell.node() + '<svg id=\"\"></svg>')\n        // rows.select(cellId).data([question.amountEarlier]).join(\"svg\");\n      }, q)}\n      style={style}\n    ></table>\n  );\n}\n\nexport default Calendar;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport MELForm from \"./MELForm\";\nimport BarChart from \"./BarChart\";\nimport Calendar from \"./Calendar\";\nimport { useSelector } from \"react-redux\";\nimport { ViewType } from \"../features/ViewType\";\nimport { selectCurrentQuestion } from \"../features/questionSlice\";\n\nexport function Survey() {\n  const question = useSelector(selectCurrentQuestion);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          {question.viewType === ViewType.barchart ? (\n            <BarChart\n              top_margin=\"20\"\n              right_margin=\"30\"\n              bottom_margin=\"30\"\n              left_margin=\"80\"\n            />\n          ) : question.viewType === ViewType.word ? (\n            <MELForm />\n          ) : (\n            <Calendar\n              top_margin=\"20\"\n              right_margin=\"20\"\n              bottom_margin=\"30\"\n              left_margin=\"30\"\n            />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Survey;\n","import { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { setTreatmentId } from \"../features/questionSlice\";\n\nexport function QueryParam() {\n  const dispatch = useDispatch();\n  const search = useLocation().search;\n  const treatmentId = new URLSearchParams(search).get(\"treatment_id\");\n  dispatch(setTreatmentId(treatmentId));\n  return \"\";\n}\n\nexport default QueryParam;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Survey from \"./components/Survey\";\nimport { QueryParam } from \"./components/QueryParam\";\nimport {\n  fetchQuestions,\n  selectAllQuestions,\n  startSurvey,\n  writeAnswers,\n  setParticipant,\n} from \"./features/questionSlice\";\nimport { ViewType } from \"./features/ViewType\";\nimport { FileIOAdapter } from \"./features/FileIOAdapter\";\nimport {\n  fetchTreatmentId,\n  fetchCurrentTreatment,\n} from \"./features/questionSlice\";\n\nconst App = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <div className=\"App\">\n          <QueryParam />\n          <Switch>\n            <Route exact path=\"/vizsurvey\" component={Home} />\n            <Route\n              exact\n              path={\"/vizsurvey/instructions\"}\n              component={Instructions}\n            />\n            <Route path=\"/vizsurvey/survey\" component={Survey} />\n            <Route path=\"/vizsurvey/thankyou\" component={ThankYou} />\n            <Route path=\"/vizsurvey/*\" component={Home} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Home = () => {\n  const treatmentId = useSelector(fetchTreatmentId);\n  return (\n    <div id=\"home-text\">\n      {treatmentId === null ? (\n        <div>\n          <p>\n            This page will not be available when deployed in production since\n            the participants will be provided a link with the treatment id in\n            the URL.\n          </p>\n          <p>\n            <a href=\"https://github.com/pcordone/vizsurvey\">Github README.md</a>\n          </p>\n          <p>\n            <a href=\"https://github.com/pcordone\">public website</a>\n          </p>\n          <p>\n            Click a link below to launch one of the experiments. The\n            experimental parameters are not setup yet and are configurable\n            through a file. Right now these links give a feel for what each type\n            of stimulus is like.\n          </p>\n          <p>\n            <Link\n              id=\"word-no-interaction\"\n              to=\"/vizsurvey/instructions?treatment_id=1\"\n            >\n              Worded with no titration and not draggable.\n            </Link>\n          </p>\n          <p>\n            <Link\n              id=\"barchart-no-interaction\"\n              to=\"/vizsurvey/instructions?treatment_id=2\"\n            >\n              Barchart with no titration and not draggable.\n            </Link>\n          </p>\n          <p>\n            <Link\n              id=\"calendar-no-interaction\"\n              to=\"/vizsurvey/instructions?treatment_id=3\"\n            >\n              Calendar with no titration and not draggable.\n            </Link>\n          </p>\n          <p>\n            <Link\n              id=\"barchart-drag\"\n              to=\"/vizsurvey/instructions?treatment_id=4\"\n            >\n              Barchart draggable.\n            </Link>\n          </p>\n          <p>\n            <Link\n              id=\"word-titration\"\n              to=\"/vizsurvey/instructions?treatment_id=5\"\n            >\n              Word titration.\n            </Link>\n          </p>\n          <p>\n            <Link\n              id=\"barchart-titration\"\n              to=\"/vizsurvey/instructions?treatment_id=6\"\n            >\n              Barchart titration.\n            </Link>\n          </p>\n        </div>\n      ) : (\n        <Redirect to={`/vizsurvey/instructions?treatment_id=${treatmentId}`} />\n      )}\n    </div>\n  );\n};\n\nconst Instructions = () => {\n  var handle = useFullScreenHandle();\n  const dispatch = useDispatch();\n  dispatch(fetchQuestions());\n  const treatment = useSelector(fetchCurrentTreatment);\n\n  function surveyButtonClicked() {\n    dispatch(startSurvey());\n    handle.enter();\n  }\n\n  return (\n    <div id=\"home-text\">\n      {treatment.viewType === ViewType.barchart ? (\n        <div>\n          Click on the bar that represents the amount that you would like to\n          receive.\n        </div>\n      ) : treatment.viewType === ViewType.word ? (\n        <div>\n          Click on the radio button that contains the amount you would like to\n          receive.\n        </div>\n      ) : treatment.viewType === ViewType.calendar ? (\n        <div>\n          Click on the day that contains the amount that you would like to\n          receive.\n        </div>\n      ) : (\n        <div>\n          Cannot display <b>specific</b> instructions since a treatment has not\n          been selected. Please select a treatment\n        </div>\n      )}\n      <FullScreen handle={handle}>\n        <Link to=\"/vizsurvey/survey\">\n          <Button size=\"lg\" onClick={surveyButtonClicked}>\n            Start Survey\n          </Button>\n        </Link>\n      </FullScreen>\n    </div>\n  );\n};\n\nconst ThankYou = () => {\n  const dispatch = useDispatch();\n  const uuid = uuidv4();\n  dispatch(setParticipant(uuid));\n  const answers = useSelector(selectAllQuestions);\n  const io = new FileIOAdapter();\n  const csv = io.convertToCSV(answers);\n  dispatch(writeAnswers(csv));\n  const handle = useFullScreenHandle();\n\n  return (\n    <FullScreen handle={handle}>\n      <div>\n        <p>\n          Your answers have been submitted. Thank you for taking this survey!\n        </p>\n        <p>\n          Your unique ID is: {uuid}. Please go back to Amazon Turk and present\n          this unique ID in the form.\n        </p>\n        <Button\n          size=\"lg\"\n          onClick={() => {\n            handle.enter();\n            setTimeout(() => {\n              handle.exit();\n            }, 400);\n          }}\n        >\n          Exit Fullscreen\n        </Button>\n      </div>\n    </FullScreen>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { enableAllPlugins } from \"immer\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}