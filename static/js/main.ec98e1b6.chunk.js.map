{"version":3,"sources":["features/ViewType.js","features/VariableType.js","features/InteractionType.js","features/Question.js","features/FileIOAdapter.js","features/treatments.js","features/StatusType.js","features/ChoiceType.js","features/Answer.js","features/questionSlice.js","features/QuestionEngine.js","app/store.js","components/MELForm.js","hooks/useD3.js","components/BarChart.js","components/Calendar.js","components/Survey.js","components/QueryParam.js","App.js","reportWebVitals.js","index.js"],"names":["ViewType","Enumify","word","barchart","calendar","_","closeEnum","VariableType","none","earlierAmount","laterAmount","InteractionType","drag","titration","Question","treatmentId","position","viewType","interaction","variableAmount","amountEarlier","timeEarlier","dateEarlier","amountLater","timeLater","dateLater","maxAmount","maxTime","horizontalPixels","verticalPixels","leftMarginWidthIn","bottomMarginHeightIn","graphWidthIn","graphHeightIn","width","height","comment","this","highup","lowdown","FileIOAdapter","fetchQuestions","csvParse","e","row","treatment_id","enumValueOf","view_type","variable_amount","amount_earlier","time_earlier","undefined","date_earlier","Date","amount_later","time_later","date_later","max_amount","max_time","horizontal_pixels","vertical_pixels","left_margin_width","bottom_margin_height","graph_width_in","graph_height_in","filter","d","writeAnswers","answersCSV","a","getState","state","console","log","JSON","stringify","answers","rows","map","choice","shownTimestamp","choiceTimestamp","participantCode","concat","join","StatusType","ChoiceType","unitialized","earlier","later","Answer","qe","questions","currentQuestionIdx","treatment","currentTreatment","latestAnswer","length","answer","id","push","createNextAnswer","action","payload","isLastTreatment","status","currentTreatmentAndLatestAnswer","possibleHighup","possibleLowdown","assert","titratingAmount","override","titrationAmount","adjustmentAmount","parseInt","toFormat","incNextQuestion","calcTitrationAmount","updateHighupOrLowdown","newAmount","calcNewAmount","io","createAsyncThunk","questionSlice","createSlice","name","initialState","participantId","error","reducers","setParticipant","setTreatmentId","startSurvey","setQuestionShownTimestamp","setLatestAnswerShown","answerCurrentQuestion","selectAllQuestions","allQuestions","fetchCurrentTreatment","selectCurrentQuestion","fetchStatus","fetchTreatmentId","actions","store","configureStore","reducer","questionReducer","middleware","getDefaultMiddleware","MELForm","dispatch","useDispatch","q","useSelector","question1stPartText","sooner_time","result","initialValues","validate","values","errors","onSubmit","setSubmitting","resetForm","setTimeout","DateTime","now","isSubmitting","role","className","type","value","style","color","fontWeight","component","Button","disabled","to","useD3","renderChartFn","dependencies","ref","React","useRef","useEffect","d3","current","BarChart","props","margin","top","top_margin","right","right_margin","bottom","bottom_margin","left","left_margin","totalHeight","totalWidth","xTickValues","Array","from","keys","data","time","amount","Container","fluid","Row","Col","svg","chart","selectAll","attr","x","scaleLinear","domain","range","yRange","y","call","axisBottom","tickValues","tickFormat","format","yTickValues","axisLeft","barWidth","on","target","__data__","select","dragHandler","Unitialized","calendarMatrix","require","Calendar","question","marginLeft","marginRight","table","monthDays","monthName","getMonth","html","text","earlierDay","getDate","laterDay","Survey","QueryParam","search","useLocation","URLSearchParams","get","App","exact","path","Home","Instructions","ThankYou","href","handle","useFullScreenHandle","size","onClick","enter","uuid","uuidv4","csv","convertToCSV","exit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","enableAllPlugins","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec98e1b6.chunk.js","sourcesContent":["import { Enumify } from \"enumify\";\n\nexport class ViewType extends Enumify {\n  static word = new ViewType();\n  static barchart = new ViewType();\n  static calendar = new ViewType();\n  static _ = this.closeEnum();\n}\n","import { Enumify } from \"enumify\";\n\nexport class VariableType extends Enumify {\n  static none = new VariableType();\n  static earlierAmount = new VariableType();\n  static laterAmount = new VariableType();\n  static _ = this.closeEnum();\n}\n","import { Enumify } from \"enumify\";\n\nexport class InteractionType extends Enumify {\n  static none = new InteractionType();\n  static drag = new InteractionType();\n  static titration = new InteractionType();\n  static _ = this.closeEnum();\n}\n","import { ViewType } from \"./ViewType\";\nimport { VariableType } from \"./VariableType\";\nimport { InteractionType } from \"./InteractionType\";\n\nexport class Question {\n  constructor({\n    treatmentId,\n    position,\n    viewType,\n    interaction,\n    variableAmount,\n    amountEarlier,\n    timeEarlier,\n    dateEarlier,\n    amountLater,\n    timeLater,\n    dateLater,\n    maxAmount,\n    maxTime,\n    horizontalPixels,\n    verticalPixels,\n    leftMarginWidthIn,\n    bottomMarginHeightIn,\n    graphWidthIn,\n    graphHeightIn,\n    width,\n    height,\n    comment,\n  }) {\n    this.treatmentId = treatmentId;\n    this.position = position;\n    this.viewType = viewType;\n    this.interaction = interaction;\n    this.variableAmount = variableAmount;\n    this.amountEarlier = amountEarlier;\n    this.timeEarlier = timeEarlier;\n    this.dateEarlier = dateEarlier;\n    this.amountLater = amountLater;\n    this.timeLater = timeLater;\n    this.dateLater = dateLater;\n    this.maxAmount = maxAmount;\n    this.maxTime = maxTime;\n    this.horizontalPixels = horizontalPixels;\n    this.verticalPixels = verticalPixels;\n    this.leftMarginWidthIn = leftMarginWidthIn;\n    this.bottomMarginHeightIn = bottomMarginHeightIn;\n    this.graphWidthIn = graphWidthIn;\n    this.graphHeightIn = graphHeightIn;\n    this.width = width;\n    this.height = height;\n    this.comment = comment;\n    this.highup = null;\n    this.lowdown = null;\n  }\n}\n\nexport function fromCSVRow(row) {\n  return new Question({\n    treatmentId: +row.treatment_id,\n    position: +row.position,\n    viewType: ViewType.enumValueOf(row.view_type),\n    interaction: InteractionType.enumValueOf(row.interaction),\n    variableAmount: VariableType.enumValueOf(row.variable_amount),\n    amountEarlier: +row.amount_earlier,\n    timeEarlier: row.time_earlier ? +row.time_earlier : undefined,\n    dateEarlier: row.date_earlier ? new Date(row.date_earlier) : undefined,\n    amountLater: +row.amount_later,\n    timeLater: row.time_later ? +row.time_later : undefined,\n    dateLater: row.date_later ? new Date(row.date_later) : undefined,\n    maxAmount: +row.max_amount,\n    maxTime: +row.max_time,\n    horizontalPixels: +row.horizontal_pixels,\n    verticalPixels: +row.vertical_pixels,\n    leftMarginWidthIn: +row.left_margin_width,\n    bottomMarginHeightIn: +row.bottom_margin_height,\n    graphWidthIn: +row.graph_width_in,\n    graphHeightIn: +row.graph_height_in,\n    width: +row.width,\n    height: +row.height,\n    comment: row.comment,\n  });\n}\n","import { csvParse } from \"d3\";\n// import { Octokit } from \"octokit\";\n// import { DateTime } from \"luxon\";\nimport { TREATMENTS_CSV } from \"./treatments\";\nimport { fromCSVRow } from \"./Question\";\n\nexport class FileIOAdapter {\n  constructor() {}\n\n  fetchQuestions = (treatmentId) => {\n    treatmentId = +treatmentId;\n    const questions = csvParse(TREATMENTS_CSV, (e) => {\n      return fromCSVRow(e);\n    }).filter((d) => d.treatmentId === treatmentId);\n    return questions;\n  };\n\n  convertToCSV(answers) {\n    const header = [\n      \"treatment_id,position,view_type,interaction,amount_earlier,time_earlier,date_earlier,amount_later,time_later,date_later,max_amount,max_time,vertical_pixels,horizontal_pixels,choice,shown_timestamp,choice_timestamp,highup,lowdown,participant_code\",\n    ];\n    const rows = answers.map(\n      (a) =>\n        `${a.treatmentId}, ${a.position}, ${a.viewType}, ${a.interaction}, ${a.amountEarlier}, ${a.timeEarlier}, ${a.dateEarlier}, ${a.amountLater}, ${a.timeLater}, ${a.dateLater}, ${a.maxAmount}, ${a.maxTime}, ${a.verticalPixels}, ${a.horizontalPixels}, ${a.choice}, ${a.shownTimestamp}, ${a.choiceTimestamp}, ${a.highup}, ${a.lowdown}, ${a.participantCode}`\n    );\n    return header.concat(rows).join(\"\\n\");\n  }\n\n  writeAnswers = async (answersCSV, { getState }) => {\n    const state = getState();\n    console.log(answersCSV);\n    console.log(JSON.stringify(state));\n    // const octokit = new Octokit({\n    //   userAgent: \"thesis_answers/v1.0\",\n    //   // eslint-disable-next-line no-undef\n    //   auth: atob(process.env.REACT_APP_AUTH_TOKEN),\n    // });\n    // // eslint-disable-next-line no-undef\n    // const gistAnswerId = process.env.REACT_APP_GIST_ANSWER_ID;\n    // const url = `PATCH /gists/${gistAnswerId}`;\n    // const now = DateTime.now().toFormat(\"yyyy-MM-dd-H-mm-ss-SSS-ZZZZ\");\n    // const files = {};\n    // answersCSV = `${answersCSV}`;\n    // files[`answers-subject-${state.questions.participant_id}-${now}.csv`] = {\n    //   content: answersCSV,\n    // };\n    // const description = `Answer results for participant ${state.questions.participant_id} at ${now}`;\n    // console.log(\"submitting answers for \" + description);\n    // const payloadObj = {\n    //   gist_id: gistAnswerId,\n    //   description: description,\n    //   files: files,\n    // };\n    // const response = await octokit.request(url, payloadObj);\n\n    // const status = response.status;\n    // console.log(\"answers submitted with status of \" + status);\n  };\n}\n","export const TREATMENTS_CSV = `treatment_id,position,view_type,interaction,variable_amount,amount_earlier,time_earlier,date_earlier,amount_later,time_later,date_later,max_amount,max_time,horizontal_pixels,vertical_pixels,left_margin_width_in,bottom_margin_height_in,graph_width_in,graph_height_in,width_in,height_in,comment\n1,1,word,none,none,500,2,,1000,3,,,10,,,,,,,,,\"Read 2001 example, absolute size\"\n2,1,barchart,none,none,500,2,,1000,3,,1000,10,480,480,0.5,0.5,6,6,6.5,6.5,\"Read 2001 example, absolute size\"\n3,1,barchart,drag,laterAmount,500,2,,1000,10,,1500,10,480,480,0.5,0.5,6,6,6.5,6.5,\"Read 2001 example, absolute size\"\n4,1,word,titration,laterAmount,500,2,,1000,3,,,10,,,,,,,,,\"Read 2001 example, absolute size\"\n5,1,barchart,titration,laterAmount,500,2,,1000,10,,1500,10,480,480,0.5,0.5,6,6,6.5,6.5,\"Read 2001 example, absolute size\"\n`;\n","export const StatusType = {\n  Unitialized: \"Unitialized\",\n  Fetching: \"Fetching\",\n  Fetched: \"Fetched\",\n  Complete: \"Complete\",\n  Error: \"Error\",\n};\n","export const ChoiceType = {\n  unitialized: \"unitialized\",\n  earlier: \"earlier\",\n  later: \"later\",\n};\n","export class Answer {\n  constructor({\n    treatmentId: treatmentId,\n    position: position,\n    viewType: viewType,\n    interaction: interaction,\n    amountEarlier: amountEarlier,\n    timeEarlier: timeEarlier,\n    dateEarlier: dateEarlier,\n    amountLater: amountLater,\n    timeLater: timeLater,\n    dateLater: dateLater,\n    maxAmount: maxAmount,\n    maxTime: maxTime,\n    verticalPixels: verticalPixels,\n    horizontalPixels: horizontalPixels,\n    choice: choice,\n    shownTimestamp: shownTimestamp,\n    choiceTimestamp: choiceTimestamp,\n    highup: highup,\n    lowdown: lowdown,\n    participantCode: participantCode,\n  }) {\n    this.treatmentId = treatmentId;\n    this.position = position;\n    this.viewType = viewType;\n    this.interaction = interaction;\n    this.amountEarlier = amountEarlier;\n    this.timeEarlier = timeEarlier;\n    this.dateEarlier = dateEarlier;\n    this.amountLater = amountLater;\n    this.timeLater = timeLater;\n    this.dateLater = dateLater;\n    this.maxAmount = maxAmount;\n    this.maxTime = maxTime;\n    this.verticalPixels = verticalPixels;\n    this.horizontalPixels = horizontalPixels;\n    this.choice = choice;\n    this.shownTimestamp = shownTimestamp;\n    this.choiceTimestamp = choiceTimestamp;\n    this.highup = highup;\n    this.lowdown = lowdown;\n    this.participantCode = participantCode;\n  }\n}\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { FileIOAdapter } from \"./FileIOAdapter\";\nimport { QuestionEngine } from \"./QuestionEngine\";\nimport { StatusType } from \"./StatusType\";\n\n// Define the initial state of the store for this slicer.\nconst qe = new QuestionEngine();\nconst io = new FileIOAdapter();\n\nexport const writeAnswers = createAsyncThunk(\n  \"survey/writeAnswers\",\n  io.writeAnswers\n);\n\nexport const questionSlice = createSlice({\n  name: \"questions\", // I believe the global state is partitioned by the name value thus the terminology \"slice\"\n  initialState: {\n    treatmentId: null,\n    participantId: null,\n    questions: [],\n    answers: [],\n    currentQuestionIdx: 0,\n    highup: undefined,\n    lowdown: undefined,\n    status: StatusType.Unitialized,\n    error: null,\n  }, // the initial state of our global data (under name slice)\n  reducers: {\n    setParticipant(state, action) {\n      state.participantId = action.payload;\n      return state;\n    },\n    setTreatmentId(state, action) {\n      state.treatmentId = action.payload;\n      return state;\n    },\n    fetchQuestions(state) {\n      state.questions = io.fetchQuestions(state.treatmentId);\n      state.status = StatusType.Fetched;\n      return state;\n    },\n    startSurvey(state) {\n      qe.startSurvey(state);\n      return state;\n    },\n    setQuestionShownTimestamp(state, action) {\n      qe.setLatestAnswerShown(state, action);\n      return state;\n    },\n    // we define our actions on the slice of global store data here.\n    answer(state, action) {\n      qe.answerCurrentQuestion(state, action);\n    },\n  },\n});\n\nexport const selectAllQuestions = (state) => {\n  return qe.allQuestions(state.questions);\n};\n\nexport const fetchCurrentTreatment = (state) => {\n  const result = qe.currentTreatment(state.questions);\n  return result;\n};\n\nexport const selectCurrentQuestion = (state) => {\n  return qe.latestAnswer(state.questions);\n};\n\nexport const fetchStatus = (state) => {\n  return state.questions.status;\n};\n\nexport const fetchTreatmentId = (state) => {\n  return state.questions.treatmentId;\n};\n\n// Action creators are generated for each case reducer function\nexport const {\n  fetchQuestions,\n  startSurvey,\n  setQuestionShownTimestamp,\n  answer,\n  setParticipant,\n  setTreatmentId,\n} = questionSlice.actions;\n\nexport default questionSlice.reducer;\n","import { StatusType } from \"./StatusType\";\nimport { VariableType } from \"./VariableType\";\nimport { InteractionType } from \"./InteractionType\";\nimport { ChoiceType } from \"./ChoiceType\";\nimport { Answer } from \"./Answer\";\n\nexport const TIMESTAMP_FORMAT = \"MM/dd/yyyy H:mm:ss:SSS ZZZZ\";\n\n// TODO Need to capture errors in processing by settings state.status = StatusType.Error\nexport class QuestionEngine {\n  constructor() {}\n\n  currentTreatment(state) {\n    return state.questions[state.currentQuestionIdx];\n  }\n\n  currentTreatmentAndLatestAnswer(state) {\n    const treatment = this.currentTreatment(state);\n    const latestAnswer = this.latestAnswer(state);\n\n    return { treatment, latestAnswer };\n  }\n\n  latestAnswer(state) {\n    return state.answers.length === 0\n      ? null\n      : state.answers[state.answers.length - 1];\n  }\n\n  createNextAnswer(\n    treatment,\n    answers,\n    amountEarlier,\n    amountLater,\n    highup,\n    lowdown\n  ) {\n    const answer = new Answer({\n      treatmentId: treatment.id,\n      position: treatment.position,\n      viewType: treatment.viewType,\n      interaction: treatment.interaction,\n      amountEarlier: amountEarlier,\n      timeEarlier: treatment.timeEarlier,\n      dateEarlier: treatment.dateEarlier,\n      amountLater: amountLater,\n      timeLater: treatment.timeLater,\n      dateLater: treatment.dateLater,\n      maxAmount: treatment.maxAmount,\n      maxTime: treatment.maxTime,\n      verticalPixels: treatment.verticalPixels,\n      horizontalPixels: treatment.horizontalPixels,\n      choice: ChoiceType.unitialized,\n      highup: highup,\n      lowdown: lowdown,\n    });\n    answers.push(answer);\n  }\n\n  allQuestions(state) {\n    return state.answers;\n  }\n\n  startSurvey(state) {\n    state.currentQuestionIdx = 0;\n    const treatment = this.currentTreatment(state);\n    state.highup =\n      treatment.variableAmount === VariableType.laterAmount\n        ? treatment.amountEarlier\n        : treatment.amountLater;\n    state.lowdown = undefined;\n    this.createNextAnswer(\n      treatment,\n      state.answers,\n      treatment.amountEarlier,\n      treatment.amountLater,\n      state.highup,\n      state.lowdown\n    );\n  }\n\n  setLatestAnswerShown(state, action) {\n    this.latestAnswer(state).shownTimestamp = action.payload;\n  }\n\n  isLastTreatment(state) {\n    return state.currentQuestionIdx === state.questions.length - 1;\n  }\n\n  incNextQuestion(state) {\n    if (this.isLastTreatment(state)) {\n      state.status = StatusType.Complete;\n    } else {\n      state.currentQuestionIdx += 1;\n      const treatment = this.currentTreatment(state);\n      this.createNextAnswer(\n        treatment,\n        state.answers,\n        treatment.amountEarlier,\n        treatment.amountLater\n      );\n    }\n  }\n\n  updateHighupOrLowdown(state) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    switch (latestAnswer.choice) {\n      case ChoiceType.earlier:\n        var possibleHighup =\n          treatment.variableAmount === VariableType.laterAmount\n            ? latestAnswer.amountLater\n            : latestAnswer.amountEarlier;\n        if (!state.highup || possibleHighup > state.highup)\n          state.highup = possibleHighup;\n        break;\n      case ChoiceType.later:\n        var possibleLowdown =\n          treatment.variableAmount === VariableType.laterAmount\n            ? latestAnswer.amountLater\n            : latestAnswer.amountEarlier;\n        if (!state.lowdown || possibleLowdown < state.lowdown)\n          state.lowdown = possibleLowdown;\n        break;\n      default:\n        console.assert(\n          true,\n          \"Invalid value for current answer in setAnswerCurrentQuestion\"\n        );\n        break;\n    }\n  }\n\n  calcTitrationAmount(titratingAmount, highup, override) {\n    return (override ? override : titratingAmount - highup) / 2;\n  }\n\n  calcNewAmount(state, titrationAmount) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    var adjustmentAmount;\n    switch (treatment.variableAmount) {\n      case VariableType.laterAmount:\n        console.assert(\n          latestAnswer.choice && latestAnswer.choice !== ChoiceType.unitialized\n        );\n        adjustmentAmount =\n          latestAnswer.choice === ChoiceType.earlier\n            ? titrationAmount\n            : -1 * titrationAmount;\n        return (\n          parseInt((latestAnswer.amountLater + adjustmentAmount) / 10) * 10\n        );\n      case VariableType.earlierAmount:\n        adjustmentAmount =\n          latestAnswer.choice === ChoiceType.earlier\n            ? -1 * titrationAmount\n            : titrationAmount;\n        return (\n          parseInt((latestAnswer.amountEarlier + adjustmentAmount) / 10) * 10\n        );\n      default:\n        console.assert(\n          true,\n          \"Invalid value for question titration type in calcEarlierAndLaterAmounts\"\n        );\n        break;\n    }\n  }\n\n  answerCurrentQuestion(state, action) {\n    const { treatment, latestAnswer } =\n      this.currentTreatmentAndLatestAnswer(state);\n    latestAnswer.choice = action.payload.choice;\n    latestAnswer.choiceTimestamp =\n      action.payload.choiceTimestamp.toFormat(TIMESTAMP_FORMAT);\n    if (\n      treatment.interaction === InteractionType.none ||\n      treatment.interaction === InteractionType.drag\n    ) {\n      this.incNextQuestion(state);\n    } else if (treatment.interaction === InteractionType.titration) {\n      const titrationAmount = this.calcTitrationAmount(\n        treatment.variableAmount === VariableType.laterAmount\n          ? latestAnswer.amountLater\n          : latestAnswer.amountEarlier,\n        state.highup,\n        latestAnswer.length === 1 ? state.highup : null\n      );\n      this.updateHighupOrLowdown(state);\n      // TODO we need a termination condition for runaway titration\n      if (state.lowdown - state.highup <= 10) {\n        this.incNextQuestion(state);\n      } else {\n        const newAmount = this.calcNewAmount(state, titrationAmount);\n        if (treatment.variableAmount === VariableType.laterAmount) {\n          this.createNextAnswer(\n            treatment,\n            state.answers,\n            treatment.amountEarlier,\n            newAmount\n          );\n        } else if (treatment.variableAmount === VariableType.earlierAmount) {\n          this.createNextAnswer(\n            treatment,\n            state.answers,\n            newAmount,\n            treatment.amountLater\n          );\n        } else {\n          console.assert(\n            true,\n            \"Titration not set to amountEarlier or amountLater before calling answerCurrentQuestion\"\n          );\n        }\n      }\n    }\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport questionReducer from \"../features/questionSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    questions: questionReducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware(),\n});\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { DateTime } from \"luxon\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport { Button } from \"react-bootstrap\";\nimport { ChoiceType } from \"../features/ChoiceType\";\nimport { StatusType } from \"../features/StatusType\";\nimport {\n  selectCurrentQuestion,\n  fetchStatus,\n  setQuestionShownTimestamp,\n  answer,\n} from \"../features/questionSlice\";\n\nexport function MELForm() {\n  const dispatch = useDispatch();\n  const q = useSelector(selectCurrentQuestion);\n  const status = useSelector(fetchStatus);\n\n  // Absolute money value, delay framing (e.g., $5 today vs. $5 plus an additional $5 in 4 weeks)\n  // Relative money value, delay framing (e.g., $5 today vs. $5 plus an additional 100% in 4 weeks)\n  // Standard MEL format (e.g., $5 today vs. $10 in 4 weeks)\n  // Relative money value, speedup framing (e.g., $10 in 4 weeks vs. $10 minus 50% today)\n  // Absolute money value, speedup framing (e.g., $10 in 4 weeks vs. $10 minus $5 today)\n\n  const todayText = (sooner_time) =>\n    sooner_time === 0 ? \"today\" : `in ${sooner_time} weeks`;\n\n  // function questionText() {\n  //   return `${question1stPartText()} vs. ${question2ndPartText()}`;\n  // }\n\n  function question1stPartText() {\n    return `$${q.amountEarlier} ${todayText(q.timeEarlier)}`;\n  }\n\n  function question2ndPartText() {\n    return `$${q.amountLater} in ${q.timeLater} weeks`;\n  }\n\n  const result = (\n    <Formik\n      initialValues={{ choice: ChoiceType.unitialized }}\n      validate={(values) => {\n        let errors = {};\n        if (!values.choice || values.choice === ChoiceType.unitialized) {\n          errors.choice = \"Please choose a selection to continue.\";\n        }\n        return errors;\n      }}\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        setTimeout(() => {\n          dispatch(\n            answer({\n              choice: values.choice,\n              choiceTimestamp: DateTime.now(),\n            })\n          );\n          setSubmitting(false);\n          resetForm();\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div\n            role=\"group\"\n            aria-labelledby=\"my-radio-group\"\n            className=\"radio-choice-label\"\n          >\n            <label>\n              <Field type=\"radio\" name=\"choice\" value={ChoiceType.earlier} />\n              &nbsp;{question1stPartText()}\n            </label>\n            <br></br>\n            <label>\n              <Field type=\"radio\" name=\"choice\" value={ChoiceType.later} />\n              &nbsp;{question2ndPartText()}\n            </label>\n            <span style={{ color: \"red\", fontWeight: \"bold\" }}>\n              <ErrorMessage name=\"choice\" component=\"div\" />\n            </span>\n          </div>\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n\n  if (status === StatusType.Complete) {\n    return <Redirect to=\"/thankyou\" />;\n  } else {\n    dispatch(setQuestionShownTimestamp(Date.now()));\n    return result;\n  }\n}\n\nexport default MELForm;\n","import React from \"react\";\nimport * as d3 from \"d3\";\n\nexport const useD3 = (renderChartFn, dependencies) => {\n  const ref = React.useRef();\n\n  React.useEffect(() => {\n    renderChartFn(d3.select(ref.current));\n    return () => {};\n  }, dependencies);\n\n  return ref;\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  range,\n  format,\n  drag,\n  select,\n} from \"d3\";\nimport { Formik, Form } from \"formik\";\nimport { Button } from \"react-bootstrap\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { DateTime } from \"luxon\";\nimport { useD3 } from \"../hooks/useD3\";\nimport { ChoiceType } from \"../features/ChoiceType\";\nimport { StatusType } from \"../features/StatusType\";\nimport { InteractionType } from \"../features//InteractionType\";\nimport {\n  selectCurrentQuestion,\n  fetchStatus,\n  setQuestionShownTimestamp,\n  answer,\n} from \"../features/questionSlice\";\n\nfunction BarChart(props) {\n  const dispatch = useDispatch();\n  const q = useSelector(selectCurrentQuestion);\n  const status = useSelector(fetchStatus);\n\n  const barWidth = 15;\n\n  const height = q.verticalPixels;\n  const width = q.horizontalPixels;\n  const margin = {\n    top: props.top_margin,\n    right: props.right_margin,\n    bottom: props.bottom_margin,\n    left: props.left_margin,\n  };\n\n  const totalHeight = height + parseInt(margin.top) + parseInt(margin.bottom);\n  const totalWidth = width + parseInt(margin.left) + parseInt(margin.right);\n\n  const xTickValues = Array.from(Array(q.maxTime + 1).keys());\n  const data = xTickValues.map((d) => {\n    if (d === q.timeEarlier) {\n      return { time: d, amount: q.amountEarlier };\n    } else if (d === q.timeLater) {\n      return { time: d, amount: q.amountLater };\n    } else {\n      return { time: d, amount: 0 };\n    }\n  });\n\n  const result = (\n    <Container fluid>\n      <Row>\n        <Col>\n          <svg\n            width={`${totalWidth}`}\n            height={`${totalHeight}`}\n            ref={useD3(\n              (svg) => {\n                var chart = svg\n                  .selectAll(\".plot-area\")\n                  .data([null])\n                  .join(\"g\")\n                  .attr(\"class\", \"plot-area\")\n                  .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n                const x = scaleLinear()\n                  .domain([0, q.maxTime])\n                  .range([0, width]);\n\n                const yRange = [0, q.maxAmount];\n                const y = scaleLinear().domain(yRange).range([height, 0]);\n\n                chart\n                  .selectAll(\".x-axis\")\n                  .data([null])\n                  .join(\"g\")\n                  .attr(\"transform\", `translate(0,${height})`)\n                  .attr(\"class\", \"x-axis\")\n                  .call(\n                    axisBottom(x)\n                      .tickValues(xTickValues)\n                      .tickFormat(format(\",.0f\"))\n                  );\n\n                const yTickValues = range(yRange[0], yRange[1], yRange[1] / 5);\n                yTickValues.push(yRange[1]);\n\n                chart\n                  .selectAll(\".y-axis\")\n                  .data([null])\n                  .join(\"g\")\n                  .attr(\"class\", \"y-axis\")\n                  //.attr(\"transform\", `translate(${margin.left},${margin.bottom})`)\n                  .call(\n                    //axisLeft(y).tickValues(yTickValues).tickFormat(d3.format(\"$,.2f\"))\n                    axisLeft(y)\n                      .tickValues(yTickValues)\n                      .tickFormat(format(\"$,.0f\"))\n                  );\n\n                // const yLabelG = svg\n                //   .select(\"#y-axis-label\")\n                //   .data([1])\n                //   .join(\"g\")\n                //   .attr(\"transform\", \"rotate(-90)\");\n\n                // .data(nullData)\n                // .join(\"text\")\n                // .attr(\"id\", \"y-axis-label\")\n                // .attr(\"text-anchor\", \"middle\")\n                // .attr(\"x\", -innerHeight / 2)\n                // .attr(\"y\", -margin.left)\n\n                // .text(\"Amount in USD\");\n\n                chart\n                  .selectAll(\".bar\")\n                  .data(data)\n                  .join(\"rect\")\n                  .attr(\"fill\", \"steelblue\")\n                  .attr(\"class\", \"bar\")\n                  .attr(\"x\", (d) => x(d.time) - barWidth / 2)\n                  .attr(\"width\", barWidth)\n                  .attr(\"y\", (d) => y(d.amount))\n                  .attr(\"id\", (d) => {\n                    return \"id\" + d.time;\n                  })\n                  .on(\"click\", (d) => {\n                    if (q.interaction === InteractionType.titration) {\n                      if (d.target.__data__.amount === q.amountEarlier) {\n                        dispatch(\n                          answer({\n                            choice: ChoiceType.earlier,\n                            choiceTimestamp: DateTime.now(),\n                          })\n                        );\n                      } else {\n                        dispatch(\n                          answer({\n                            choice: ChoiceType.later,\n                            choiceTimestamp: DateTime.now(),\n                          })\n                        );\n                      }\n                    }\n                  })\n                  .attr(\"height\", (d) => y(0) - y(d.amount));\n                var dragHandler = drag().on(\"drag\", function (d) {\n                  if (q.interaction === InteractionType.drag) {\n                    select(this)\n                      .attr(\"y\", d.y)\n                      .attr(\"height\", y(0) - d.y);\n                  }\n                });\n                dragHandler(chart.selectAll(\".bar\"));\n              },\n              [q]\n            )}\n          ></svg>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          {q.interaction === InteractionType.drag ? (\n            <Formik\n              initialValues={{ choice: ChoiceType.Unitialized }}\n              validate={() => {\n                let errors = {};\n                return errors;\n              }}\n              onSubmit={(values, { setSubmitting, resetForm }) => {\n                console.log(\"submitting\");\n                setTimeout(() => {\n                  dispatch(\n                    answer({\n                      choice: ChoiceType.earlier,\n                      choiceTimestamp: DateTime.now(),\n                    })\n                  );\n                  setSubmitting(false);\n                  resetForm();\n                }, 400);\n              }}\n            >\n              {({ isSubmitting }) => (\n                <Form>\n                  <Button type=\"submit\" disabled={isSubmitting}>\n                    Submit\n                  </Button>\n                </Form>\n              )}\n            </Formik>\n          ) : (\n            \"\"\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n\n  if (status === StatusType.Complete) {\n    return <Redirect to=\"/thankyou\" />;\n  } else {\n    dispatch(setQuestionShownTimestamp(Date.now()));\n    return result;\n  }\n}\n\nexport default BarChart;\n","import React from \"react\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentQuestion } from \"../features/questionSlice\";\n\nimport * as d3 from \"d3\";\nimport { useD3 } from \"../hooks/useD3\";\nvar calendarMatrix = require(\"calendar-matrix\");\n\nfunction Calendar(props) {\n  const question = useSelector(selectCurrentQuestion);\n\n  const height = question.question.verticalPixels;\n  const width = question.question.horizontalPixels;\n  const margin = {\n    top: props.top_margin,\n    right: props.right_margin,\n    bottom: props.bottom_margin,\n    left: props.left_margin,\n  };\n\n  const totalHeight = height + parseInt(margin.top) + parseInt(margin.bottom);\n  const totalWidth = width + parseInt(margin.left) + parseInt(margin.right);\n\n  const style = {\n    height: totalHeight,\n    width: totalWidth,\n    marginLeft: margin.left + \"px\",\n    marginRight: margin.right + \"px\",\n  };\n\n  //   const dateMonth = question.dateEarlier.getMonth();\n  //   const dateYear = question.dateEarlier.getFullYear();\n\n  return (\n    <table\n      id=\"calendar\"\n      ref={useD3((table) => {\n        const monthDays = calendarMatrix(question.question.dateEarlier);\n        const monthNames = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ];\n        const month = question.question.dateEarlier.getMonth();\n        const monthName = monthNames[month];\n        table.html(\n          `<thead>\n                <tr>\n                    <td span='7'>\n                        <h2 id='currentMonth'></h2>\n                    </td>\n                </tr>\n                <tr>\n                    <td style='text-align: center;'>Sunday</td>\n                    <td style='text-align: center;'>Monday</td>\n                    <td style='text-align: center;'>Tuesday</td>\n                    <td style='text-align: center;'>Wednesday</td>\n                    <td style='text-align: center;'>Thursday</td>\n                    <td style='text-align: center;'>Friday</td>\n                    <td style='text-align: center;'>Saturday</td>\n                </tr>\n            </thead>\n            <tbody id='calendarBody'></tbody>`\n        );\n\n        const calendar = d3.select(\"#calendar\");\n\n        calendar\n          .select(\"#currentMonth\")\n          .data([monthName])\n          .join(\"h2\")\n          .text((d) => d);\n\n        const tbody = calendar.select(\"#calendarBody\");\n\n        const rows = tbody.selectAll(\"tbody\").data(monthDays).join(\"tr\");\n\n        const earlierDay = question.question.dateEarlier.getDate();\n        const laterDay = question.question.dateLater.getDate();\n        rows\n          .selectAll(\"td\")\n          .data((d) => d)\n          .join(\"td\")\n          .attr(\"class\", function (d) {\n            return d > 0 ? \"calendarDay\" : \"calendarDayEmpty\";\n          })\n          .attr(\"id\", (d) => \"calendarDay-\" + d)\n          .html((d) => {\n            if (d === earlierDay || d === laterDay) {\n              return `<div>${d}</div><svg id='${\n                d === earlierDay ? \"earlierAmount\" : \"laterAmount\"\n              }'></svg>`;\n            } else if (d > 0) {\n              return d;\n            } else {\n              return \"\";\n            }\n          });\n\n        const earlierAmountSVG = rows.select(\"#earlierAmount\");\n\n        earlierAmountSVG\n          .select(\"text\")\n          .data([question.question.amountEarlier])\n          .join(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"class\", \"earlier-amount\")\n          .text((d) => d);\n\n        //   .text(function (d) {\n        //     return d > 0 ? d : \"\";\n        //   });\n\n        // const cellId = \"#calendarDay-\" + question.dateEarlier.getDay();\n        // const earlierDayCell = rows.select(cellId);\n        // const earlierDayHTML = `<td id=\"${cellId}`\n\n        // earlierDayCell.html(earlierDayCell.node() + '<svg id=\"\"></svg>')\n        // rows.select(cellId).data([question.amountEarlier]).join(\"svg\");\n      }, question)}\n      style={style}\n    ></table>\n  );\n}\n\nexport default Calendar;\n","import { Container, Row, Col } from \"react-bootstrap\";\nimport MELForm from \"./MELForm\";\nimport BarChart from \"./BarChart\";\nimport Calendar from \"./Calendar\";\nimport { useSelector } from \"react-redux\";\nimport { ViewType } from \"../features/ViewType\";\nimport { selectCurrentQuestion } from \"../features/questionSlice\";\n\nexport function Survey() {\n  const question = useSelector(selectCurrentQuestion);\n\n  return (\n    <Container fluid>\n      <Row>\n        <Col>\n          {question.viewType === ViewType.barchart ? (\n            <BarChart\n              top_margin=\"20\"\n              right_margin=\"30\"\n              bottom_margin=\"30\"\n              left_margin=\"80\"\n            />\n          ) : question.viewType === ViewType.word ? (\n            <MELForm />\n          ) : (\n            <Calendar\n              top_margin=\"20\"\n              right_margin=\"20\"\n              bottom_margin=\"30\"\n              left_margin=\"30\"\n            />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default Survey;\n","import { useDispatch } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport { setTreatmentId } from \"../features/questionSlice\";\n\nexport function QueryParam() {\n  const dispatch = useDispatch();\n  const search = useLocation().search;\n  const treatmentId = new URLSearchParams(search).get(\"treatment_id\");\n  dispatch(setTreatmentId(treatmentId));\n  return \"\";\n}\n\nexport default QueryParam;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route, Switch, Link, Redirect } from \"react-router-dom\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Button } from \"react-bootstrap\";\nimport \"./App.css\";\nimport Survey from \"./components/Survey\";\nimport { QueryParam } from \"./components/QueryParam\";\nimport {\n  fetchQuestions,\n  selectAllQuestions,\n  startSurvey,\n  writeAnswers,\n  setParticipant,\n} from \"./features/questionSlice\";\nimport { ViewType } from \"./features/ViewType\";\nimport { FileIOAdapter } from \"./features/FileIOAdapter\";\nimport {\n  fetchTreatmentId,\n  fetchCurrentTreatment,\n} from \"./features/questionSlice\";\n\nconst App = () => {\n  return (\n    <div>\n      <BrowserRouter>\n        <div className=\"App\">\n          <QueryParam />\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path={\"/instructions\"} component={Instructions} />\n            <Route path=\"/survey\" component={Survey} />\n            <Route path=\"/thankyou\" component={ThankYou} />\n            <Route path=\"/*\" component={Home} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n\nconst Home = () => {\n  const treatmentId = useSelector(fetchTreatmentId);\n  return (\n    <div id=\"home-text\">\n      {treatmentId === null ? (\n        <div>\n          <p>\n            We shouldn not see this page since the participants will be provided\n            a link with the treatment id in the URL.\n          </p>\n          <p>Click a link below to launc one of the experiments.</p>\n          <p>\n            <a href=\"https://github.com/pcordone/vizsurvey\">Github README.md</a>\n          </p>\n          <p>\n            <a href=\"https://pcordone.github.io\">public website</a>\n          </p>\n          <p>\n            <a\n              id=\"word-no-titration\"\n              href=\"vizsurvey/instructions?treatment_id=1\"\n            >\n              Worded with no titration and not draggable.\n            </a>\n          </p>\n          <p>\n            <a\n              id=\"barchart-no-titration\"\n              href=\"vizsurvey/instructions?treatment_id=2\"\n            >\n              Barchart with no titration and not draggable.\n            </a>\n          </p>\n          <p>\n            <a id=\"barchart-drag\" href=\"vizsurvey/instructions?treatment_id=3\">\n              Barchart draggable.\n            </a>\n          </p>\n          <p>\n            <a id=\"word-titration\" href=\"vizsurvey/instructions?treatment_id=4\">\n              Word titration.\n            </a>\n          </p>\n          <p>\n            <a\n              id=\"barchart-titration\"\n              href=\"vizsurvey/instructions?treatment_id=5\"\n            >\n              Barchart titration.\n            </a>\n          </p>\n        </div>\n      ) : (\n        <Redirect to={`/instructions?treatment_id=${treatmentId}`} />\n      )}\n    </div>\n  );\n};\n\nconst Instructions = () => {\n  var handle = useFullScreenHandle();\n  const dispatch = useDispatch();\n  dispatch(fetchQuestions());\n  const treatment = useSelector(fetchCurrentTreatment);\n\n  function surveyButtonClicked() {\n    dispatch(startSurvey());\n    handle.enter;\n  }\n\n  return (\n    <div id=\"home-text\">\n      {treatment.viewType === ViewType.barchart ? (\n        <div>\n          Click on the bar that represents the amount that you would like to\n          receive.\n        </div>\n      ) : treatment.viewType === ViewType.word ? (\n        <div>\n          Click on the radio button that contains the amount you would like to\n          receive.\n        </div>\n      ) : treatment.viewType === ViewType.calendar ? (\n        <div>\n          Click on the day that contains the amount that you would like to\n          receive.\n        </div>\n      ) : (\n        <div>\n          Cannot display <b>specific</b> instructions since a treatment has not\n          been selected. Please select a treatment\n        </div>\n      )}\n      <FullScreen handle={handle}>\n        <Link to=\"/survey\">\n          <Button size=\"lg\" onClick={surveyButtonClicked}>\n            Start Survey\n          </Button>\n        </Link>\n      </FullScreen>\n    </div>\n  );\n};\n\nconst ThankYou = () => {\n  const dispatch = useDispatch();\n  const uuid = uuidv4();\n  dispatch(setParticipant(uuid));\n  const answers = useSelector(selectAllQuestions);\n  const io = new FileIOAdapter();\n  const csv = io.convertToCSV(answers);\n  dispatch(writeAnswers(csv));\n  const handle = useFullScreenHandle();\n\n  return (\n    <FullScreen handle={handle}>\n      <div>\n        <p>\n          Your answers have been submitted. Thank you for taking this survey!\n        </p>\n        <p>\n          Your unique ID is: {uuid}. Please go back to Amazon Turk and present\n          this unique ID in the form.\n        </p>\n        <Button\n          size=\"lg\"\n          onClick={() => {\n            handle.enter();\n            setTimeout(() => {\n              handle.exit();\n            }, 400);\n          }}\n        >\n          Exit Fullscreen\n        </Button>\n      </div>\n    </FullScreen>\n  );\n};\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { enableAllPlugins } from \"immer\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nenableAllPlugins();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}